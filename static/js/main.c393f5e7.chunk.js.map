{"version":3,"sources":["components/TopMenuBar/DrawerNav.js","components/TopMenuBar/TopMenuBar.js","components/Home/Home.js","components/Shopping/AddItemForm.js","components/Shopping/ShoppingItem.js","components/Shopping/ItemList.js","components/AlertDialog.js","components/Shopping/ListMenu.js","components/Shopping/ShoppingList.js","components/Shopping/ShoppingHome.js","components/Settings/Settings.js","components/RecipeSearch/SearchForm.js","components/RecipeSearch/IngredientList.js","components/RecipeSearch/RecipeCard.js","components/RecipeSearch/ResultsGridList.js","components/RecipeSearch/RecipeSearch.js","components/SavedRecipes/SavedRecipes.js","App.js","serviceWorker.js","index.js"],"names":["DrawerNav","state","open","toggleDrawer","_this","setState","classes","this","props","sideList","react_default","a","createElement","className","list","List_default","text","icon","path","map","link","index","ListItem_default","button","key","component","NavLink","to","ListItemIcon_default","ListItemText_default","primary","IconButton_default","onClick","menuButton","color","aria-label","Menu_default","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","React","Component","withStyles","width","TopMenuBar","handleClick","addButton","ButtonExist","show","hide","topMenu","AppBar_default","position","Toolbar_default","TopMenuBar_DrawerNav","Typography_default","variant","ml","grow","title","Add_default","theme","flexGrow","minWidth","textAlign","marginLeft","marginRight","visibility","Home","components_TopMenuBar_TopMenuBar","index_es","AddItemForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nameFieldValue","quantityFieldValue","typeFieldValue","nameFieldInputRef","onSubmit","bind","assertThisInitialized","handleTextFieldChange","handleQuantityFieldChange","handleTypeFieldChange","event","target","value","preventDefault","newItemName","newQuantity","newType","newItem","name","quantity","type","addItem","listKey","focus","_this2","core_index_es","item","autoComplete","container","direction","wrap","nameFieldWrap","nameField","id","ref","label","onChange","fullWidth","inputRef","el","quantityField","FormControl_default","typeField","InputLabel_default","htmlFor","Select_default","MenuItem_default","spacing","unit","ShoppingItem","onClickDel","onClickDone","itemIndex","parseInt","listIndex","removeItem","markItemDone","DoneClass","done","checkBoxIcon","itemRow","alignItems","itemName","noWrap","itemQuantity","itemType","paddingTop","paddingBottom","textOverflow","whiteSpace","overflow","paddingLeft","paddingRight","padding","ItemList","items","Shopping_ShoppingItem","AlertDialog","handleCancel","handleClose","handleConfirm","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","alertTitle","DialogContent_default","DialogContentText_default","alertText","DialogActions_default","Button_default","closeBtnText","autoFocus","confirmBtnText","ListMenu","delAlertOpen","handleToggle","anchorEl","contains","handleEditBtn","listNameEdit","handleDelBtn","handleDelAlertClose","handleDelConfirm","listDel","components_AlertDialog","MenuButton","buttonRef","node","aria-owns","undefined","aria-haspopup","Popper_default","transition","_ref","TransitionProps","placement","Grow_default","assign","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","display","paper","ShoppingList","nameEdit","listNameSave","handleNameChange","setListName","handleKeyPress","ListNameHeadClass","ListNameFieldClass","Grid_default","ListGrid","FullWidth","justify","ListTitle","align","ListName","onKeyPress","inputProps","fontSize","lineHeight","letterSpacing","Shopping_ListMenu","listName","Shopping_ItemList","itemDel","itemDone","Shopping_AddItemForm","itemAdd","maxWidth","backgroundColor","palette","background","ShoppingHome","ShoppingListArray","listGroup","length","instructionsGrid","notFound","components_Shopping_ShoppingList","listAdd","Settings","resetApp","setSampleData","SearchForm","handleCheckboxChange","defineProperty","checked","handleRadioChange","dietValue","searchTerms","hideResults","searchFieldInputRef","veganChecked","vegetarianChecked","peanutFreeChecked","handleSearchTermsChange","newSearchTerms","searchDB","blur","searchForm","searchFieldWrap","placeholder","helperText","InputLabelProps","shrink","onFocus","dietWrap","FormLabel_default","dietRadioGroup","control","Radio_default","DietWrap","searchField","flexDirection","IngredientList","Divider_default","dense","RecipeReviewCard","handleExpandClick","expanded","handleSave","isSaved","savedIndex","removeRecipe","addRecipe","recipe","close","nutritionFacts","code","row","totalNutrients","totalDaily","Math","round","yield","daily","dietLabels","dietList","healthLabels","noneMessage","savedClass","Card_default","card","CardHeader_default","action","Favorite_default","closeIcon","subheader","source","CardMedia_default","media","image","CardContent_default","calories","RecipeSearch_IngredientList","ingredientLines","CardActions_default","actions","disableActionSpacing","window","url","classnames","expand","expandOpen","aria-expanded","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","Table_default","TableBody_default","TableRow_default","TableCell_default","colspan","height","transform","transitions","create","duration","shortest","avatar","red","ResultsGridList","selectedRecipe","hideSearch","scrollTo","handleCardClose","showSearch","_this$props","columns","results","data","result","GridListTile_default","uri","gridListTitle","src","alt","GridListTileBar_default","subtitle","content","GridList_default","cellHeight","cols","gridList","ListSubheader_default","selectedIndex","findIndex","x","savedRecipes","RecipeSearch_RecipeCard","root","withWidth","flexWrap","justifyContent","cursor","RecipeSearch","searchRecipe","terms","isFetching","fetch","then","response","json","hits","resultsClass","searchClass","RecipeSearch_SearchForm","RecipeSearch_ResultsGridList","SavedRecipes","recipeTitle","listkey","RecipeListArray","App","addList","arguments","push","removeList","ListKey","splice","ItemKey","List","ListItem","unshift","ItemList1","ItemList2","recipeKey","hydrateStateWithLocalStorage","addEventListener","saveStateToLocalStorage","removeEventListener","localStorage","setItem","JSON","stringify","hasOwnProperty","getItem","parse","e","material_ui_styles","muiTheme","getMuiTheme","CssBaseline_default","react_router","exact","render","components_Shopping_ShoppingHome","components_RecipeSearch_RecipeSearch","components_SavedRecipes_SavedRecipes","components_Settings_Settings","Boolean","location","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c393f5e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  \r\n};\r\n\r\nclass DrawerNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n       \r\n  };\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      open: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          {[{text: 'Home', icon: 'home', path: '/'},\r\n            {text: 'Shopping List', icon: 'shopping_cart', path: '/Shopping'},\r\n            {text: 'Recipe Search', icon: 'search', path: '/RecipeSearch'},\r\n            {text: 'Saved Recipes', icon: 'list', path: '/SavedRecipes'},\r\n            {text: 'Settings', icon: 'settings', path: '/Settings'}].map((link, index) => (\r\n              <ListItem button key={link.text} component={NavLink} to={link.path}>\r\n                <ListItemIcon><i className=\"material-icons\">{link.icon}</i></ListItemIcon>\r\n                <ListItemText primary={link.text} />\r\n              </ListItem>\r\n            ))}\r\n\r\n        </List>\r\n        \r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n        <MenuIcon />\r\n        </IconButton>\r\n\r\n        <SwipeableDrawer\r\n          open={this.state.open}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </SwipeableDrawer>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawerNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DrawerNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DrawerNav from './DrawerNav';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    visibility: 'hidden',\r\n  }\r\n});\r\n\r\nclass TopMenuBar extends React.Component {\r\n\r\n\r\n  handleClick = () => {\r\n    // set the addButton prop to handleClick function only if the prop was passed to TopMenuBar component\r\n    if (this.props.addButton) {\r\n      this.props.addButton();\r\n\r\n    };\r\n  };\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    // If the addButton prop exists, then set the ButtonExist to to have the show CSS class\r\n    // If it does not exist, set to hide\r\n\r\n    var ButtonExist = this.props.addButton ? \r\n    classes.show : classes.hide;\r\n\r\n\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          \r\n          <DrawerNav />\r\n       \r\n          <Typography variant=\"h6\" color=\"inherit\" ml={100} className={classes.grow}>\r\n          {this.props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={this.handleClick} className={ButtonExist}><AddIcon /></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nTopMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenuBar);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport { Paper } from 'material-ui';\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div >\r\n        <TopMenuBar title=\"Foodi\" />\r\n        <div className=\"HomeWindow\">\r\n        \r\n        <Paper>\r\n          <p>Test Home Page paper</p>\r\n        </Paper>\r\n        </div>     \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n  nameField: {\r\n    marginRight: theme.spacing.unit,\r\n    \r\n  },\r\n\r\n  nameFieldWrap: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  \r\n  quantityField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 40,\r\n  },\r\n\r\n  typeField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 60,\r\n    },\r\n\r\n  addButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  }\r\n  \r\n});\r\n\r\nclass AddItemForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {nameFieldValue: '',\r\n                    quantityFieldValue: '',\r\n                    typeFieldValue: '',\r\n                    nameFieldInputRef: '',\r\n                    };\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\r\n      this.handleQuantityFieldChange = this.handleQuantityFieldChange.bind(this);\r\n      this.handleTypeFieldChange = this.handleTypeFieldChange.bind(this);\r\n\r\n    }\r\n\r\n  \r\n    handleTextFieldChange(event) {\r\n      this.setState({\r\n          nameFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    handleQuantityFieldChange(event) {\r\n      this.setState({\r\n          quantityFieldValue: event.target.value\r\n      });\r\n    }\r\n    \r\n    handleTypeFieldChange(event) {\r\n      this.setState({\r\n          typeFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemName = this.state.nameFieldValue;\r\n      var newQuantity = this.state.quantityFieldValue;\r\n      var newType = this.state.typeFieldValue;\r\n      \r\n      if(newItemName) {\r\n        var newItem = {};\r\n        newItem.name = newItemName;\r\n        newItem.quantity = newQuantity;\r\n        newItem.type = newType;\r\n        \r\n        this.props.addItem(this.props.listKey,newItem);\r\n        this.setState({\r\n        nameFieldValue: '',\r\n        quantityFieldValue: '',\r\n        typeFieldValue: ''\r\n        });\r\n\r\n        this.state.nameFieldInputRef.focus();\r\n        \r\n        \r\n      }\r\n    }\r\n    render () {\r\n      const {classes} = this.props;\r\n      \r\n      return (\r\n        \r\n        <Grid item>\r\n        <form onSubmit={this.onSubmit} autoComplete='off'>\r\n        <Grid container direction=\"row\" wrap=\"nowrap\">\r\n        \r\n        <Grid item className={classes.nameFieldWrap}>\r\n        <TextField className={classes.nameField}\r\n        id=\"itemName\"\r\n        ref=\"itemName\"\r\n        label=\"add item..\"\r\n        value={this.state.nameFieldValue} \r\n        onChange={this.handleTextFieldChange}\r\n        fullWidth\r\n        inputRef={el => this.setState({nameFieldInputRef: el})}\r\n        \r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <TextField className={classes.quantityField}\r\n        id=\"itemQuantity\"\r\n        ref=\"itemQuantity\"\r\n        label=\"qty\"\r\n        value={this.state.quantityFieldValue} \r\n        onChange={this.handleQuantityFieldChange}\r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <FormControl className={classes.typeField}>\r\n        <InputLabel htmlFor=\"type\">unit</InputLabel>\r\n          <Select\r\n            value={this.state.typeFieldValue}\r\n            onChange={this.handleTypeFieldChange}\r\n            \r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>none</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"gal\">gal</MenuItem>\r\n            <MenuItem value=\"lb\">lb</MenuItem>\r\n            <MenuItem value=\"box\">box</MenuItem>\r\n            <MenuItem value=\"L\">L</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n        \r\n        <IconButton className={classes.addButton} type=\"submit\" color=\"primary\" variant=\"contained\">\r\n        <i className=\"material-icons\">\r\n        add_shopping_cart\r\n        </i>\r\n        </IconButton>\r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n        </Grid>\r\n\r\n        \r\n        \r\n\r\n        \r\n      );   \r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(AddItemForm);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  itemRow: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n\r\n  itemName: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n  },\r\n\r\n  noWrap: {\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  itemQuantity: {\r\n    width: 40,\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing.unit,\r\n    textAlign: 'right',    \r\n  },\r\n\r\n  itemType: {\r\n    width: 40,\r\n    padding: 0,\r\n    textAlign: 'left',\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n\r\n \r\n});\r\n\r\nclass ShoppingItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickDel = this.onClickDel.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickDel() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.removeItem(listIndex,itemIndex);\r\n    }\r\n    onClickDone() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.markItemDone(listIndex,itemIndex);\r\n    }\r\n    render () {\r\n      const { classes } = this.props;\r\n      var DoneClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n\r\n      let checkBoxIcon = this.props.item.done ?\r\n          <i className=\"material-icons\" >\r\n          check_box\r\n          </i> \r\n        : <i className=\"material-icons\" >\r\n          check_box_outline_blank\r\n          </i>\r\n     \r\n          \r\n      return(\r\n          <div className={DoneClass}>\r\n          <ListItem className={classes.itemRow}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n          <Grid item className={classes.itemName}><Typography variant=\"subheading\" color=\"inherit\" className={classes.noWrap}>{this.props.item.name}</Typography></Grid>\r\n          <Grid item className={classes.itemQuantity}><Typography variant=\"subheading\" color=\"inherit\" className={classes.noWrap}>{this.props.item.quantity}</Typography></Grid>\r\n          <Grid item className={classes.itemType}><Typography variant=\"subheading\" color=\"inherit\" >{this.props.item.type}</Typography></Grid>\r\n          <Grid item><IconButton onClick={this.onClickDone} color=\"inherit\" >\r\n          \r\n          {checkBoxIcon}\r\n          </IconButton></Grid>\r\n\r\n          <Grid item><IconButton onClick={this.onClickDel} >\r\n          <i className=\"material-icons\" >\r\n          delete\r\n          </i>\r\n          </IconButton></Grid>\r\n          </Grid>\r\n          </ListItem>\r\n          </div>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(ShoppingItem);","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nclass ItemList extends React.Component {\r\n    render () {\r\n       \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <ShoppingItem item={item} index={index} listKey={this.props.listKey} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n          \r\n        );\r\n      });\r\n      return (\r\n        <Grid item>\r\n        <List >\r\n        {items}\r\n        </List>\r\n        </Grid>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemList;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    this.props.handleConfirm();\r\n    this.props.handleClose();\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Dialog\r\n          open={this.props.open}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{this.props.alertTitle}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n            {this.props.alertText}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleCancel} color=\"primary\">\r\n              {this.props.closeBtnText}\r\n            </Button>\r\n            <Button onClick={this.handleConfirm} color=\"secondary\" autoFocus>\r\n              {this.props.confirmBtnText}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AlertDialog from '../AlertDialog';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  ListMenu: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass ListMenu extends React.Component {\r\n  state = {\r\n    open: false,\r\n    delAlertOpen: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleEditBtn = () => {\r\n    this.setState({ open: false });\r\n    this.props.listNameEdit(this.props.listKey);\r\n    }\r\n    \r\n\r\n  handleDelBtn = () => {\r\n    \r\n    this.setState({ open: false, delAlertOpen: true });\r\n    }\r\n  \r\n  handleDelAlertClose = () => {\r\n    this.setState({delAlertOpen: false})\r\n  }\r\n\r\n  handleDelConfirm = () => {\r\n    this.props.listDel(this.props.listKey);\r\n\r\n  }\r\n\r\n    \r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.ListMenu}>\r\n        <div>\r\n        <AlertDialog \r\n        open={this.state.delAlertOpen} \r\n        handleClose={this.handleDelAlertClose} \r\n        handleConfirm={this.handleDelConfirm}\r\n        alertTitle=\"Confirm Delete\"\r\n        alertText=\"This will delete the list.  Are you sure?\" \r\n        closeBtnText=\"cancel\"\r\n        confirmBtnText=\"delete\" />\r\n        \r\n        <IconButton \r\n        className={classes.MenuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <i className=\"material-icons\" >\r\n            more_vert\r\n            </i>\r\n                     \r\n                    \r\n        </IconButton>\r\n\r\n\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleEditBtn} >Edit List Title</MenuItem>\r\n                      <MenuItem onClick={this.handleDelBtn} >Delete List</MenuItem>\r\n                      \r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ListMenu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './ShoppingList.css' \r\nimport { Paper } from 'material-ui';\r\nimport AddItemForm from './AddItemForm';\r\nimport ItemList from './ItemList';\r\nimport ListMenu from './ListMenu';\r\nimport { TextField } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nconst styles = theme => ({\r\n  ListGrid : {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    minWidth: 320,\r\n\r\n  },\r\n  FullWidth : {\r\n    width: '100%',\r\n  },\r\n\r\n  ListTitle: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n    marginLeft: theme.spacing.unit * 2,\r\n  },\r\n\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n\r\n  ShoppingList: {\r\n    \r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    \r\n  },\r\n\r\n});\r\n\r\n\r\n  \r\nclass ShoppingList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      nameEdit: false,\r\n\r\n    };\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n\r\n  }\r\n\r\n  listNameEdit = (listKey) => {\r\n    this.setState({nameEdit: true});\r\n\r\n  }\r\n\r\n  listNameSave = (listKey) => {\r\n    this.setState({nameEdit: false});\r\n\r\n  }\r\n\r\n  handleNameChange = (event) =>  {\r\n    this.props.setListName(this.props.index, event.target.value);\r\n\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n \r\n      if (event.key === 'Enter') {\r\n        this.setState({nameEdit: false});\r\n       \r\n      }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    var ListNameHeadClass = this.state.nameEdit ? \r\n    \"hide nowrap\" : \"nohide nowrap\";\r\n\r\n    var ListNameFieldClass = this.state.nameEdit ?\r\n    \"nohide nowrap\" : \"hide nowrap\";\r\n\r\n      \r\n\r\n    return (\r\n      \r\n        <Grid  item className={classes.ListGrid}>\r\n        <Paper className={classes.ShoppingList}>\r\n        <Grid className={classes.FullWidth} container direction=\"column\" wrap=\"nowrap\" justify=\"flex-start\">\r\n          <Grid item >\r\n          <Grid container direction=\"row\" alignItems=\"center\"  wrap=\"nowrap\" className={classes.FullWidth}  >\r\n            <Grid item className={classes.ListTitle}>\r\n            <Typography variant=\"h6\" align=\"center\" className={ListNameHeadClass} onClick={this.listNameEdit}>{this.props.ListName}</Typography>\r\n            <div className={ListNameFieldClass} >\r\n              <ClickAwayListener onClickAway={this.listNameSave}>\r\n\r\n              <TextField  \r\n              id=\"listName\" \r\n              ref=\"listName\" \r\n              value={this.props.ListName}\r\n              onChange={this.handleNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth\r\n              inputProps={{\r\n                style: {  textAlign: \"center\",\r\n                          fontSize: \"1.25rem\",\r\n                          lineHeight: \"1.6\",\r\n                          letterSpacing: \"0.0075em\"}\r\n              }}\r\n              \r\n              \r\n              />\r\n              </ClickAwayListener>\r\n            </div> \r\n            </Grid>\r\n            <Grid item>\r\n            <ListMenu listDel={this.props.listDel} listKey={this.props.index} listName={this.props.ListName} listNameEdit={this.listNameEdit}/>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n          <ItemList listKey={this.props.index} items={this.props.ItemList} removeItem={this.props.itemDel} markItemDone={this.props.itemDone}/>\r\n          <AddItemForm listKey={this.props.index} addItem={this.props.itemAdd} />\r\n        </Grid>\r\n        </Paper>\r\n        </Grid>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ShoppingList);\r\n","import React from 'react';\r\nimport ShoppingList from './ShoppingList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './ShoppingHome.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n\r\n  instructionsGrid : {\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 2,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    width: '100%',\r\n    padding: '0',\r\n  },\r\n\r\n  notFound: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n    textAlign: 'center',\r\n  \r\n    \r\n  },\r\n\r\n\r\n});\r\n\r\n\r\nclass ShoppingHome extends React.Component {\r\n    \r\n    render() {\r\n      const { classes } = this.props;\r\n      let ShoppingListArray = null;\r\n\r\n    if (this.props.listGroup.length === 0) {\r\n    ShoppingListArray = <Grid container item justify=\"center\" wrap=\"nowrap\" direction=\"column\" className={classes.instructionsGrid}>\r\n    \r\n  \r\n    <Grid item className={classes.notFound}>\r\n    <Typography variant=\"h6\" color=\"inherit\">No Lists Found</Typography>\r\n    </Grid>\r\n    \r\n    </Grid>\r\n      \r\n    }\r\n    else {\r\n      ShoppingListArray = this.props.listGroup.map((list, index) => {\r\n        return ( <ShoppingList \r\n          index={index} \r\n          ListName={list.ListName} \r\n          ItemList={list.ItemList} \r\n          listDel={this.props.listDel} \r\n          setListName={this.props.setListName}\r\n          itemAdd={this.props.itemAdd} \r\n          itemDel={this.props.itemDel} \r\n          itemDone={this.props.itemDone}\r\n  \r\n          />\r\n          );\r\n\r\n\r\n      });\r\n      \r\n    };\r\n      \r\n\r\n\r\n    \r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        <TopMenuBar title=\"Foodi - Shopping Lists\" addButton={this.props.listAdd} />\r\n        <div className=\"ShoppingWindow\">\r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {ShoppingListArray}\r\n        \r\n        </Grid>\r\n        </div>\r\n        </div>\r\n        \r\n               \r\n        \r\n      );\r\n      \r\n    }\r\n\r\n\r\n  }\r\n  \r\n  export default withStyles(styles)(ShoppingHome);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport { Paper } from 'material-ui';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"MainWindow\">\r\n        <TopMenuBar title=\"Foodi - Settings\" />\r\n        <Paper>\r\n          <p>Test Settings Page paper</p>\r\n          <Button onClick={this.props.resetApp}>Reset App</Button>\r\n          <Button onClick={this.props.setSampleData}>Import Sample Data</Button>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Settings;","import React, { Component } from 'react';\r\nimport { Paper } from 'material-ui';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, TextField, Checkbox, FormControlLabel, RadioGroup } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst styles = theme => ({\r\n\r\n\r\n    searchFieldWrap: {\r\n      marginRight: theme.spacing.unit * 2,\r\n      flexGrow: 1,\r\n      \r\n    },\r\n\r\n    fullWidth : {\r\n      width: '100%',\r\n      \r\n    },\r\n\r\n    searchForm: {\r\n    \r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing.unit * 2,\r\n        \r\n\r\n    },\r\n\r\n    searchField: {\r\n      marginRight: theme.spacing.unit,\r\n      \r\n    },\r\n\r\n    dietRadioGroup: {\r\n      flexDirection: 'row',\r\n    },\r\n\r\n    dietWrap: {\r\n      paddingTop: 24,\r\n\r\n    },\r\n\r\n});\r\n\r\n\r\nclass SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchTerms: '',\r\n            hideResults: true,\r\n            searchFieldInputRef: '',\r\n            dietValue: 'no-restriction',\r\n            veganChecked: false,\r\n            vegetarianChecked: false,\r\n            peanutFreeChecked: false,\r\n            \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleSearchTermsChange = this.handleSearchTermsChange.bind(this);\r\n    }\r\n\r\n    handleSearchTermsChange(event) {\r\n      this.setState({\r\n          searchTerms: event.target.value\r\n      });\r\n    }\r\n\r\n    handleCheckboxChange = name => event => {\r\n      this.setState({ [name]: event.target.checked });\r\n    }\r\n\r\n    handleRadioChange = event => {\r\n      this.setState({ dietValue: event.target.value })\r\n    }\r\n\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newSearchTerms = this.state.searchTerms;\r\n      \r\n      \r\n      if(newSearchTerms) {\r\n        if (this.state.dietValue !== 'no-restriction') {\r\n          newSearchTerms = newSearchTerms+\"&diet=\"+this.state.dietValue;\r\n        }\r\n        if (this.state.veganChecked) {\r\n          newSearchTerms = newSearchTerms+\"&health=vegan\";\r\n        }\r\n        if (this.state.vegetarianChecked) {\r\n          newSearchTerms = newSearchTerms+\"&health=vegetarian\";\r\n        }\r\n        if (this.state.peanutFreeChecked) {\r\n          newSearchTerms = newSearchTerms+\"&health=peanut-free\";\r\n        }\r\n        \r\n        this.props.searchDB(newSearchTerms);\r\n        this.state.searchFieldInputRef.blur();\r\n               \r\n      }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n        <div className={classes.fullWidth}>\r\n        <Paper className={classes.searchForm}>\r\n        <form onSubmit={this.onSubmit} autoComplete='off'>\r\n        <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n        <Grid item className={classes.fullWidth}>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n       \r\n        <Grid item className={classes.searchFieldWrap}>\r\n        \r\n        <TextField \r\n          id=\"search-field\"\r\n          placeholder=\"Enter Search Terms Here\"\r\n          helperText=\"ex: grilled chicken\"\r\n          fullWidth          \r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          value={this.state.searchTerms}\r\n          onChange={this.handleSearchTermsChange}\r\n          inputRef={el => this.setState({searchFieldInputRef: el})}\r\n          onFocus={this.props.hideResults}\r\n        />\r\n        \r\n        </Grid>\r\n        <Grid item>\r\n        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Search\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n\r\n        <Grid item className={classes.dietWrap}>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">Diet Type</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"Diet Type\"\r\n              name=\"dietType\"\r\n              value={this.state.dietValue}\r\n              onChange={this.handleRadioChange}\r\n              className={classes.dietRadioGroup}\r\n              >\r\n              <FormControlLabel value=\"no-restriction\" control={<Radio />} label=\"No Restriction\" />\r\n              <FormControlLabel value=\"balanced\" control={<Radio />} label=\"Balanced\" />\r\n              <FormControlLabel value=\"high-protein\" control={<Radio />} label=\"High Protein\" />\r\n              <FormControlLabel value=\"low-fat\" control={<Radio />} label=\"Low Fat\" />\r\n              <FormControlLabel value=\"low-carb\" control={<Radio />} label=\"Low Carb\" />\r\n              \r\n              </RadioGroup>\r\n            </FormControl>\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n          \r\n\r\n          <Grid item className={classes.DietWrap}>\r\n          <FormControl fullWidth component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Additional Diet Filters</FormLabel>\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          \r\n\r\n\r\n\r\n          <Grid item><FormControlLabel\r\n            control={\r\n              <Checkbox \r\n                checked={this.state.veganChecked}\r\n                onChange={this.handleCheckboxChange('veganChecked')}\r\n                value='vegan'\r\n                />\r\n            }\r\n            label='Vegan'/>\r\n          </Grid>\r\n\r\n          <Grid item><FormControlLabel\r\n            control={\r\n              <Checkbox \r\n                checked={this.state.vegetarianChecked}\r\n                onChange={this.handleCheckboxChange('vegetarianChecked')}\r\n                value='vegetarian'\r\n                />\r\n            }\r\n            label='Vegetarian'/>\r\n          </Grid>\r\n\r\n          \r\n\r\n          <Grid item><FormControlLabel\r\n            control={\r\n              <Checkbox \r\n                checked={this.state.peanutFreeChecked}\r\n                onChange={this.handleCheckboxChange('peanutFreeChecked')}\r\n                value='peanutFree'\r\n                />\r\n            }\r\n            label='Peanut Free'/>\r\n          </Grid>\r\n\r\n          \r\n          \r\n          </Grid>\r\n          </FormControl>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n     \r\n        \r\n        \r\n        </form>\r\n        </Paper>\r\n        </div>\r\n\r\n        \r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(styles)(SearchForm);","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nclass IngredientList extends React.Component {\r\n    render () {\r\n       \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n            <ListItem index={index} >{item}</ListItem>\r\n                    \r\n        );\r\n      });\r\n      return (\r\n        <div>\r\n        <Typography variant=\"h6\" className='extratopPadding'>Ingredient List</Typography>\r\n        <Divider />\r\n        \r\n        <List dense>\r\n        {items}\r\n        </List>\r\n        </div>\r\n        \r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default IngredientList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport red from '@material-ui/core/colors/red';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IngredientList from './IngredientList';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport './RecipeCard.css'\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  dietList: {\r\n    paddingBottom: '0px !important',\r\n  }\r\n});\r\n\r\nclass RecipeReviewCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      expanded: false,\r\n      };\r\n    }\r\n\r\n \r\n\r\n  handleExpandClick = () => {\r\n    this.setState(state => ({ expanded: !state.expanded }));\r\n  };\r\n\r\n  handleSave = () => {\r\n    if (this.props.isSaved) {\r\n      let index = this.props.savedIndex;\r\n      this.props.removeRecipe({index});\r\n\r\n    }\r\n\r\n    else {\r\n      this.props.addRecipe(this.props.recipe);\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleClose = () => {\r\n    let index = this.props.savedIndex;\r\n    this.props.close({index});\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const nutritionList = [\r\n      {name:'Total Fat', code:'FAT'},\r\n      {name:'Saturated Fat', code:'FASAT'},\r\n      {name:'Trans Fat', code:'FATRN'},\r\n      {name:'Cholesterol', code:'CHOLE'},\r\n      {name:'Sodium', code:'NA'},\r\n      {name:'Total Carbohydrate', code:'CHOCDF'},\r\n      {name:'Dietary Fiber', code:'FIBTG'},\r\n      {name:'Sugars', code:'SUGAR'},\r\n      {name:'Protein', code:'PROCNT'},\r\n    ];\r\n\r\n    const nutritionFacts = nutritionList.map(row => {\r\n      let totalNutrients = this.props.recipe.totalNutrients[row.code];\r\n      if (totalNutrients === undefined) {\r\n        totalNutrients = {quantity: 0}\r\n      }\r\n      let totalDaily = this.props.recipe.totalDaily[row.code];\r\n      if (totalDaily === undefined) {\r\n        totalDaily = {quantity: 0}\r\n      }\r\n      \r\n      return {name: row.name, \r\n              code: row.code, \r\n              quantity: Math.round(totalNutrients.quantity / this.props.recipe.yield),\r\n              unit: totalNutrients.unit,\r\n              daily: Math.round(totalDaily.quantity / this.props.recipe.yield) \r\n              }\r\n      \r\n    });\r\n\r\n    let dietLabels = '';\r\n    \r\n\r\n    if (this.props.recipe.dietLabels.length > 0) {\r\n      dietLabels = this.props.recipe.dietLabels.map(name => {\r\n        return <Grid item className={classes.dietList}><Typography variant='subtitle1' >{name}</Typography></Grid>\r\n      });\r\n\r\n    }\r\n\r\n    let healthLabels = '';\r\n\r\n    if (this.props.recipe.healthLabels.length > 0) {\r\n    healthLabels = this.props.recipe.healthLabels.map(name => {\r\n      return <Grid item className={classes.dietList}><Typography variant='subtitle1'>{name}</Typography></Grid>\r\n\r\n      });\r\n    }\r\n\r\n    let noneMessage = '';\r\n    if (dietLabels.length > 1 & healthLabels.length > 1) {\r\n      noneMessage= <Grid item className={classes.dietList}><Typography variant='subtitle1'>no diet or health categories found</Typography></Grid>\r\n    }\r\n\r\n   \r\n    \r\n    let savedClass = \"hide\";\r\n\r\n    if (this.props.addRecipe !== undefined) {\r\n      savedClass = this.props.isSaved ?\r\n    \"saved\" : \"notSaved\";\r\n\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n      \r\n          action={\r\n            <div>\r\n            <IconButton aria-label=\"Add to favorites\" onClick={this.handleSave} className={savedClass}>\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n            <IconButton onClick={this.handleClose}>\r\n              <i className=\"material-icons\">\r\n            {this.props.closeIcon}\r\n            </i>\r\n            </IconButton>\r\n            </div>\r\n          }\r\n          title={this.props.recipe.label}\r\n          subheader={this.props.recipe.source}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={this.props.recipe.image}\r\n          title={this.props.recipe.label}\r\n        />\r\n        <CardContent>\r\n          <Grid container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\">\r\n            <Grid item><Typography variant='subtitle1'>{this.props.recipe.yield} Servings</Typography></Grid>\r\n            <Grid item><Typography variant='subtitle1'>{Math.round(this.props.recipe.calories / this.props.recipe.yield)} Calories per Serving</Typography></Grid>\r\n            </Grid>\r\n            <Typography variant=\"h6\" className='topPadding'>Diet & Health Categories</Typography>\r\n        <Divider />\r\n            <Grid container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={16}>\r\n            {noneMessage}\r\n            {dietLabels}\r\n            {healthLabels}\r\n            </Grid>\r\n          <IngredientList items={this.props.recipe.ingredientLines}/>\r\n        </CardContent>\r\n        <CardActions className={classes.actions} disableActionSpacing>\r\n          \r\n          <Button className=\"recipeButton\" label=\"Full Recipe\" color=\"primary\" onClick={() => {window.open(this.props.recipe.url,'_blank')}}>\r\n            Full Recipe\r\n          </Button>\r\n          <Button className=\"alignRight\" label=\"Nutrition Facts\" onClick={this.handleExpandClick}>\r\n            Nutrition Facts\r\n          </Button>\r\n          \r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" >Nutrition Facts</Typography>\r\n            <Divider  />\r\n            <Typography variant='subtitle2'>Amount Per Serving</Typography>\r\n            <Typography variant='subtitle1'>Calories {Math.round(this.props.recipe.calories / this.props.recipe.yield)}</Typography>\r\n            <Divider  />\r\n            <Table className='nutritionFacts'>\r\n              \r\n             \r\n              \r\n              <TableBody>\r\n              <TableRow>\r\n                  <TableCell colspan={2} align=\"right\">% Daily Values</TableCell>\r\n              </TableRow>\r\n               {nutritionFacts.map(row => (\r\n                  <TableRow>\r\n                    <TableCell>\r\n                    {row.name} {row.quantity}{row.unit}\r\n                      \r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                      {row.daily}%\r\n                      </TableCell>\r\n\r\n                  </TableRow>\r\n                ))} \r\n               \r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nRecipeReviewCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RecipeReviewCard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Paper } from 'material-ui';\r\nimport RecipeCard from './RecipeCard';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    \r\n  },\r\n  gridList: {\r\n    maxWidth: 1000,\r\n    \r\n  },\r\n  gridListTitle: {\r\n    cursor: 'pointer',\r\n    \r\n  },\r\n  results: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 2,    \r\n\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n\r\n\r\n});\r\n\r\n\r\n\r\n \r\n\r\nclass ResultsGridList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedRecipe: '',\r\n    }\r\n\r\n  }\r\n\r\n  handleClick = (recipe) => { \r\n    this.setState({selectedRecipe: recipe});\r\n    this.props.hideSearch();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  handleCardClose = () =>\r\n  {\r\n    this.setState({selectedRecipe: ''});\r\n    this.props.showSearch();\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes, width } = this.props;\r\n    let columns = 4;\r\n    \r\n    if (width === 'xs') {\r\n      columns = 2;\r\n    };\r\n    if (width === 'sm') {\r\n      columns = 3;\r\n    };\r\n\r\n    let results = '';\r\n\r\n    if (this.props.data === undefined || this.props.data.length === 0) {\r\n      results = <Typography>No results</Typography>\r\n    }\r\n\r\n    else {\r\n      results = (\r\n        this.props.data.map(result => (\r\n          \r\n          <GridListTile key={result.recipe.uri} className={classes.gridListTitle} onClick={() => this.handleClick(result.recipe.uri)}>\r\n          \r\n            <img src={result.recipe.image} alt={result.recipe.label} />\r\n            <GridListTileBar\r\n              title={result.recipe.label}\r\n              subtitle={<span>{result.recipe.source}</span>}\r\n\r\n            />\r\n          </GridListTile>\r\n   \r\n        ))\r\n      )\r\n    };\r\n\r\n    let content = '';\r\n\r\n    if (this.state.selectedRecipe === '') {\r\n      content = (\r\n        <Paper className={classes.results}>\r\n        <GridList cellHeight={180}  cols={columns} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={columns} style={{ height: 'auto' }}>\r\n        <ListSubheader component=\"div\">Search Results...</ListSubheader>\r\n        </GridListTile>\r\n        {results}\r\n      </GridList>\r\n      </Paper>\r\n\r\n      )\r\n    }\r\n\r\n    else {\r\n      let selectedIndex = this.props.data.findIndex(x => x.recipe.uri === this.state.selectedRecipe);\r\n      let isSaved = false;\r\n      let savedIndex = this.props.savedRecipes.findIndex(item => {\r\n        return item.recipe.uri === this.props.data[selectedIndex].recipe.uri\r\n      }\r\n      );\r\n      if (savedIndex > -1) {\r\n        isSaved= true;\r\n      };\r\n     \r\n      \r\n      \r\n      content = (\r\n        \r\n        <RecipeCard \r\n        recipe={this.props.data[selectedIndex].recipe} \r\n        close={this.handleCardClose}\r\n        closeIcon='close'\r\n        addRecipe={this.props.addRecipe}\r\n        removeRecipe={this.props.removeRecipe}\r\n        savedRecipes={this.props.savedRecipes}\r\n        isSaved={isSaved}\r\n        savedIndex={savedIndex}/>\r\n\r\n      )\r\n    };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    \r\n    {content}\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n}\r\n\r\nResultsGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(ResultsGridList));\r\n","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './RecipeSearch.css'\r\nimport SearchForm from './SearchForm';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ResultsGridList from './ResultsGridList';\r\n\r\n\r\nclass RecipeSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFetching: false,\r\n            data: [],\r\n            hideResults: true,\r\n            hideSearch: false,\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    searchRecipe = (terms) => {\r\n        this.setState({isFetching: true,});\r\n\r\n        // fetch the data\r\n        let baseUrl='https://api.edamam.com/search?app_id=9680102e&app_key=65589c702692d0ca9a4ffdd705fb2dcf&to=30&q='\r\n                \r\n         fetch(baseUrl + terms)\r\n         .then(response => response.json())\r\n         .then(data => this.setState({data: data.hits}));\r\n\r\n       \r\n        this.setState({isFetching: false,\r\n                        hideResults: false});\r\n\r\n    }\r\n\r\n    hideSearch = () => {\r\n        this.setState({hideSearch: true});\r\n    }\r\n    showSearch = () => {\r\n        this.setState({hideSearch: false});\r\n    }\r\n     \r\n    render() {      \r\n        var resultsClass = this.state.hideResults ? \r\n        \"hide fullWidth\" : \"nohide fullWidth\";\r\n\r\n        var searchClass = this.state.hideSearch ?\r\n        \"hide fullWidth\" : \"nohide fullWidth\";\r\n\r\n\r\n      return (\r\n        \r\n        <div>\r\n        <TopMenuBar title=\"Foodi - Recipe Search\" />\r\n        <div className=\"MainWindow\">\r\n        \r\n        <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={16}\r\n        \r\n        >\r\n        <Grid item className={searchClass}>\r\n            <SearchForm searchDB={this.searchRecipe} />        \r\n        </Grid>\r\n\r\n        <Grid item className={resultsClass}  >\r\n            <ResultsGridList \r\n            data={this.state.data} \r\n            hideSearch={this.hideSearch} \r\n            showSearch={this.showSearch}\r\n            addRecipe={this.props.addRecipe}\r\n            removeRecipe={this.props.removeRecipe}\r\n            savedRecipes={this.props.savedRecipes}/>\r\n        </Grid>\r\n\r\n        </Grid>\r\n        \r\n        </div>\r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default RecipeSearch;","import React from 'react';\r\nimport RecipeCard from '../RecipeSearch/RecipeCard';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './SavedRecipes.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AlertDialog from '../AlertDialog';\r\n\r\nconst styles = theme => ({\r\n\r\n  instructionsGrid : {\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 2,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    width: '100%',\r\n    padding: '0',\r\n  },\r\n\r\n  notFound: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n    textAlign: 'center',\r\n  \r\n    \r\n  },\r\n\r\n\r\n});\r\n\r\n\r\nclass SavedRecipes extends React.Component {\r\n  state = {\r\n    delAlertOpen: false,\r\n    listKey: '',\r\n    recipeTitle: '',\r\n  };\r\n\r\n  handleDelBtn = (listkey) => {\r\n    \r\n    this.setState({delAlertOpen: true,\r\n                  listKey: listkey.index,\r\n                  });\r\n    \r\n    }\r\n  \r\n  handleDelAlertClose = () => {\r\n    this.setState({delAlertOpen: false})\r\n  }\r\n\r\n  handleDelConfirm = () => {\r\n    \r\n    this.props.removeRecipe(this.state.listKey);\r\n\r\n  }\r\n\r\n    \r\n    render() {\r\n      const { classes } = this.props;\r\n      let RecipeListArray = null;\r\n\r\n    if (this.props.savedRecipes.length === 0) {\r\n    RecipeListArray = <Grid container item justify=\"center\" wrap=\"nowrap\" direction=\"column\" className={classes.instructionsGrid}>\r\n    \r\n  \r\n    <Grid item className={classes.notFound}>\r\n    <Typography variant=\"h6\" color=\"inherit\">No Saved Recipes Found</Typography>\r\n    </Grid>\r\n    \r\n    </Grid>\r\n      \r\n    }\r\n    else {\r\n        \r\n         \r\n      RecipeListArray = this.props.savedRecipes.map((list, index) => {\r\n        return ( \r\n            \r\n            <RecipeCard \r\n            recipe={list.recipe} \r\n            close={this.handleDelBtn}\r\n            closeIcon='delete'\r\n            savedRecipes={this.props.savedRecipes}\r\n            isSaved={true}\r\n            savedIndex={index}/>\r\n\r\n          \r\n          ); \r\n\r\n\r\n      }); \r\n      \r\n    };\r\n      \r\n\r\n\r\n    \r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        <AlertDialog \r\n        open={this.state.delAlertOpen} \r\n        handleClose={this.handleDelAlertClose} \r\n        handleConfirm={this.handleDelConfirm}\r\n        alertTitle=\"Confirm Delete\"\r\n        alertText={\"This will delete the saved recipe.  Are you sure?\"}\r\n        closeBtnText=\"cancel\"\r\n        confirmBtnText=\"delete\" />\r\n\r\n        <TopMenuBar title=\"Foodi - Saved Recipes\" />\r\n        <div className=\"SavedRecipeWindow\">\r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {RecipeListArray}\r\n        \r\n        </Grid>\r\n        </div>\r\n        </div>\r\n        \r\n               \r\n        \r\n      );\r\n      \r\n    }\r\n\r\n\r\n  }\r\n  \r\n  export default withStyles(styles)(SavedRecipes);","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from 'material-ui/styles';\r\nimport { getMuiTheme } from 'material-ui/styles';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './components/Home/Home';\r\nimport ShoppingHome from './components/Shopping/ShoppingHome';\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport RecipeSearch from './components/RecipeSearch/RecipeSearch';\r\nimport SavedRecipes from './components/SavedRecipes/SavedRecipes';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listGroup: [],\r\n      savedRecipes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.hydrateStateWithLocalStorage();\r\n\r\n    // add event listener to save state to localStorage\r\n    // when user leaves/refreshes the page\r\n    window.addEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n\r\n    // saves if component has a chance to unmount\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    // for every item in React state\r\n    for (let key in this.state) {\r\n      // save to localStorage\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n    }\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetApp = () => {\r\n    \r\n    this.setState({listGroup: [],\r\n                  savedRecipes: [],});\r\n    \r\n  }\r\n\r\n\r\n  // function to make new list in component state.  takes in ListName and ItemList array as arguments\r\n  addList = (ListName=\"New Shopping List\", ItemList=[]) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.push({ListName, ItemList});\r\n    this.setState({listGroup: listGroup});      \r\n    \r\n  }\r\n\r\n  // function to remove list.  takes in ListKey as argument. \r\n\r\n  removeList = (ListKey) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.splice(ListKey, 1);\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  setListName = (ListKey, name) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup[ListKey].ListName = name;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to remove item from specified list in state.  takes in ListKey and ItemKey as arguments\r\n  removeItem = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.splice(ItemKey, 1);\r\n    listGroup[ListKey].ItemList = List; \r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to add item from specified list in state.  takes in ListKey, ListItem as arguments\r\n  // ListItem has these props:  item.name, item.quantity, item.type, item.done\r\n\r\n  addItem = (ListKey, ListItem={quantity: \"\", type: \"\"}) => {\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.unshift({\r\n      name: ListItem.name,\r\n      quantity: ListItem.quantity,\r\n      type: ListItem.type,\r\n      done: false\r\n    });\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to mark an item as done.  takes in ListKey, ItemKey as arguments\r\n\r\n  markItemDone = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    var item = List[ItemKey];\r\n    item.done = !item.done;\r\n    List[ItemKey] = item;\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n\r\n\r\n  setSampleData = () => {\r\n    \r\n    var ListName1 = \"Trader Joes\";\r\n    var ItemList1 = [];\r\n    ItemList1.push({name: \"milk\", quantity: 1, type: \"gal\", done: false});\r\n    ItemList1.push({name: \"cheese\", quantity: 2, type: \"cup\", done: true});\r\n    ItemList1.push({name: \"wheat bread\", quantity: 1, type: \"\", done: true});\r\n    \r\n  \r\n    var ListName2 = \"Shaws\";\r\n    var ItemList2 = [];\r\n    ItemList2.push({name: \"soda\", quantity: 2, type: \"L\", done: false});\r\n    ItemList2.push({name: \"sour worms\", quantity: 1, type: \"\", done: false});\r\n    ItemList2.push({name: \"ground beef\", quantity: 1, type: \"lb\", done: true});\r\n\r\n    this.addList(ListName1,ItemList1);\r\n    this.addList(ListName2,ItemList2);    \r\n\r\n    }\r\n\r\n    addRecipe = (recipe) => {\r\n      var savedRecipes = this.state.savedRecipes;\r\n      savedRecipes.push({recipe});\r\n      this.setState({savedRecipes: savedRecipes}); \r\n      \r\n\r\n    }\r\n\r\n    removeRecipe = (recipeKey) => {\r\n      var savedRecipes = this.state.savedRecipes;\r\n      savedRecipes.splice(recipeKey, 1);\r\n      this.setState({savedRecipes: savedRecipes});\r\n      \r\n    }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n      <div className=\"App\">\r\n      <CssBaseline />\r\n      \r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/Shopping' \r\n        render={(props) => <ShoppingHome {...props} \r\n        listGroup={this.state.listGroup}\r\n        listDel={this.removeList} \r\n        listAdd={this.addList}\r\n        setListName={this.setListName}\r\n        itemAdd={this.addItem} \r\n        itemDel={this.removeItem} \r\n        itemDone={this.markItemDone}\r\n        />}\r\n        />\r\n        <Route path='/RecipeSearch' \r\n        render={(props) => <RecipeSearch {...props} \r\n        addRecipe={this.addRecipe}\r\n        removeRecipe={this.removeRecipe}\r\n        savedRecipes={this.state.savedRecipes}\r\n        \r\n        />}\r\n        />\r\n        <Route path='/SavedRecipes' \r\n        render={(props) => <SavedRecipes {...props} \r\n        \r\n        removeRecipe={this.removeRecipe}\r\n        savedRecipes={this.state.savedRecipes}\r\n        \r\n        />}\r\n        />\r\n        <Route path='/Settings' \r\n        render={(props) => <Settings {...props} \r\n        resetApp={this.resetApp}\r\n        setSampleData={this.setSampleData}\r\n        />}\r\n        />\r\n        <Route component={() => (<div>404 Not found </div>)}/>\r\n        </Switch>\r\n      </div>\r\n      </MuiThemeProvider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}