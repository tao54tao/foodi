{"version":3,"sources":["components/TopNav.js","components/TopMenu.js","components/Home.js","components/ListView.js","components/ShoppingList.js","components/MainWindow.js","components/App.js","serviceWorker.js","index.js"],"names":["TopMenu","state","open","handleToggle","_this","setState","handleClose","event","anchorEl","contains","target","_this2","this","classes","props","react_default","a","createElement","className","TopNav","IconButton_default","menuButton","color","aria-label","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Menu_default","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","Object","assign","id","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","component","NavLink","to","process","React","Component","withStyles","theme","display","paper","marginRight","spacing","unit","ButtonAppBar","topMenu","AppBar_default","position","Toolbar_default","Typography_default","variant","grow","Button_default","Add_default","flexGrow","marginLeft","Home","ItemList","push","index","name","category","quantity","type","done","ItemView","items","map","item","ListView_TodoListItem","key","removeItem","markItemDone","List_default","TodoListItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickClose","bind","assertThisInitialized","onClickDone","parseInt","todoClass","ListItem_default","ListItemText_default","primary","index_es","TodoForm","_this3","onSubmit","refs","itemName","focus","preventDefault","newItemName","value","addItem","form","reset","ref","placeholder","TodoHeader","ListView","_this4","todoItem","unshift","length","itemIndex","splice","todo","ListView_TodoHeader","ListView_ItemView","ListView_TodoForm","width","maxWidth","backgroundColor","palette","background","ShoppingList","components_ListView","MainWindow","react_router","exact","path","App","CssBaseline_default","components_TopMenu","components_MainWindow","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6df5689.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  TopNav: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass TopMenu extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.TopNav}>\r\n        <div>\r\n\r\n        <IconButton \r\n        className={classes.menuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <MenuIcon />\r\n                     \r\n           \r\n          \r\n        </IconButton>\r\n\r\n          {/* <Button\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            Toggle Menu Grow\r\n          </Button> */}\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to={process.env.PUBLIC_URL + '/'}>Home</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to={process.env.PUBLIC_URL + '/ShoppingList'}>Shopping List</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TopNav from './TopNav';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n});\r\n\r\nclass ButtonAppBar extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <TopNav />\r\n\r\n\r\n         \r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Foodi\r\n          </Typography>\r\n          \r\n          <Button color=\"inherit\"><AddIcon /></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n/* \r\nfunction ButtonAppBar(props) {\r\n  const { classes } = this.props;\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <TopNav />\r\n\r\n\r\n         \r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Foodi\r\n          </Typography>\r\n          \r\n          <Button color=\"inherit\"><AddIcon /></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n} */\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        \r\n        <div>\r\n        <h2>Home Page</h2>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport { Button } from '@material-ui/core';\r\nimport '../css/ListView.css' \r\n\r\nconst styles = theme => ({\r\n  ListView: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\n\r\n\r\nvar ItemList = [];\r\nItemList.push({index: 1, name: \"milk\", category: \"dairy\", quantity: 1, type: \"gal\", done: false});\r\nItemList.push({index: 2, name: \"cheese\", category: \"dairy\", quantity: 2, type: \"cup\", done: true});\r\nItemList.push({index: 3, name: \"wheat bread\", category: \"general\", quantity: 1, type: \"whole\", done: true});\r\n\r\nclass ItemView extends React.Component {\r\n  render () {\r\n\r\n    var items = this.props.items.map((item, index) => {\r\n      return (\r\n        <TodoListItem key={index} item={item} index={index} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n      );\r\n    });\r\n    return (\r\n      <List >\r\n      {items}\r\n      </List>\r\n\r\n      /* <ul className=\"list-group\"> {items} </ul> */\r\n\r\n    );\r\n  }\r\n}\r\n  \r\nclass TodoListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickClose = this.onClickClose.bind(this);\r\n    this.onClickDone = this.onClickDone.bind(this);\r\n  }\r\n  onClickClose() {\r\n    var index = parseInt(this.props.index);\r\n    this.props.removeItem(index);\r\n  }\r\n  onClickDone() {\r\n    var index = parseInt(this.props.index);\r\n    this.props.markItemDone(index);\r\n  }\r\n  render () {\r\n    var todoClass = this.props.item.done ? \r\n        \"done\" : \"undone\";\r\n    return(\r\n        <div className={todoClass}>\r\n        <ListItem >\r\n        <ListItemText primary={this.props.item.name} />\r\n        <Button onClick={this.onClickDone} >\r\n        <i className=\"material-icons\" >\r\n        check\r\n        </i>\r\n        </Button>\r\n        <Button onClick={this.onClickClose} >\r\n        <i className=\"material-icons\" >\r\n        delete\r\n        </i>\r\n        </Button>\r\n        </ListItem>\r\n        </div>\r\n\r\n      /* <li className=\"list-group-item \">\r\n        <div className={todoClass}>\r\n          <span className=\"glyphicon glyphicon-ok icon\" aria-hidden=\"true\" onClick={this.onClickDone}></span>\r\n          {this.props.item.name}\r\n          <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\r\n        </div>\r\n      </li>      */\r\n    );\r\n  }\r\n}\r\n\r\nclass TodoForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.refs.itemName.focus();\r\n  }\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    var newItemName = this.refs.itemName.value;\r\n    \r\n    if(newItemName) {\r\n      this.props.addItem({newItemName});\r\n      this.refs.form.reset();\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n      <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\r\n        <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new item...\"/>\r\n        <button type=\"submit\" className=\"btn btn-default\">Add</button> \r\n      </form>\r\n    );   \r\n  }\r\n}\r\n  \r\nclass TodoHeader extends React.Component {\r\n  render () {\r\n    return <h3>{this.props.name}</h3>;\r\n  }\r\n}\r\n  \r\nclass ListView extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.markItemDone = this.markItemDone.bind(this);\r\n    this.state = {ItemList: ItemList};\r\n  }\r\n  addItem(todoItem) {\r\n    ItemList.unshift({\r\n      index: ItemList.length+1, \r\n      name: todoItem.newItemName, \r\n      done: false\r\n    });\r\n    this.setState({ItemList: ItemList});\r\n  }\r\n  removeItem (itemIndex) {\r\n    ItemList.splice(itemIndex, 1);\r\n    this.setState({ItemList: ItemList});\r\n  }\r\n  markItemDone(itemIndex) {\r\n    var todo = ItemList[itemIndex];\r\n    ItemList.splice(itemIndex, 1);\r\n    todo.done = !todo.done;\r\n    todo.done ? ItemList.push(todo) : ItemList.unshift(todo);\r\n    this.setState({ItemList: ItemList});  \r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.ListView}>\r\n        <TodoHeader name={\"Stop & Shop\"} />\r\n        <ItemView  items={ItemList} removeItem={this.removeItem} markItemDone={this.markItemDone}/>\r\n        <TodoForm addItem={this.addItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ListView);\r\n","import React, { Component } from 'react';\r\nimport ListView from './ListView';\r\n\r\nclass ShoppingList extends Component {\r\n    render() {\r\n      \r\n\r\n\r\n      return (\r\n        \r\n        <div>\r\n        <h2>Shopping List</h2>\r\n        <ListView />\r\n        </div>\r\n        \r\n      );\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n  export default ShoppingList;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport ShoppingList from './ShoppingList'\r\n\r\n\r\n\r\nclass MainWindow extends Component {\r\n    render() {\r\n\r\n      \r\n\r\n      return (\r\n        \r\n        \r\n          \r\n        <div className=\"MainWindow\">\r\n        <Switch>\r\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Home}/>\r\n        <Route path={process.env.PUBLIC_URL + '/ShoppingList'} component={ShoppingList}/>\r\n        </Switch>\r\n        \r\n       \r\n        </div>\r\n        \r\n      );\r\n    };\r\n\r\n  }\r\n  \r\n  export default (MainWindow);","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport '../css/App.css';\nimport TopMenu from './TopMenu';\nimport MainWindow from './MainWindow';\n\n\nclass App extends Component {\n  render() {\n    return (\n      \n      <div className=\"App\">\n      <CssBaseline />\n      <TopMenu />\n      <MainWindow />\n      </div>\n      \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}