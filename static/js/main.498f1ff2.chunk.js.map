{"version":3,"sources":["components/TopNav.js","components/TopMenuBar.js","components/Home.js","components/AddItemForm.js","components/ShoppingItem.js","components/ItemView.js","components/ListView.js","components/ShoppingList.js","components/MainWindow.js","components/App.js","serviceWorker.js","index.js"],"names":["TopNav","state","open","handleToggle","_this","setState","handleClose","event","anchorEl","contains","target","_this2","this","classes","props","react_default","a","createElement","className","IconButton_default","menuButton","color","aria-label","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Menu_default","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","Object","assign","id","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","component","NavLink","to","React","Component","withStyles","theme","display","paper","marginRight","spacing","unit","TopMenuBar","topMenu","AppBar_default","position","Toolbar_default","components_TopNav","Typography_default","variant","grow","react_router","path","exact","render","flexGrow","marginLeft","Home","AddItemForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textFieldValue","onSubmit","bind","assertThisInitialized","handleTextFieldChange","value","preventDefault","newItemName","addItem","refs","form","reset","ref","core_index_es","label","margin","onChange","type","ShoppingItem","onClickClose","onClickDone","index","parseInt","removeItem","markItemDone","DoneClass","item","done","ListItem_default","ListItemText_default","primary","name","ItemView","items","map","components_ShoppingItem","key","List_default","ListHeader","ListView","ItemList","todoItem","unshift","length","itemIndex","splice","push","Grid_default","index_es","ListView_ListHeader","ListName","components_ItemView","components_AddItemForm","width","maxWidth","minWidth","backgroundColor","palette","background","paddingTop","paddingBottom","ShoppingList","fetchData","objectSpread","isFetching","ItemList1","category","quantity","ItemList2","ListData","ListItems","forEach","ListGroup","listgroup","ListGroupView","list","components_ListView","container","direction","justify","alignItems","MainWindow","App","material_ui_styles","muiTheme","getMuiTheme","CssBaseline_default","components_TopMenuBar","components_MainWindow","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"miBA0BMA,6MACJC,MAAQ,CACNC,MAAM,KAGRC,aAAe,WACbC,EAAKC,SAAS,SAAAJ,GAAK,MAAK,CAAEC,MAAOD,EAAMC,WAGzCI,YAAc,SAAAC,GACRH,EAAKI,SAASC,SAASF,EAAMG,SAGjCN,EAAKC,SAAS,CAAEH,MAAM,6EAIf,IAAAS,EAAAC,KACCC,EAAYD,KAAKE,MAAjBD,QACAX,EAASU,KAAKX,MAAdC,KAER,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQb,QACtBe,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACAE,UAAWL,EAAQO,WACnBC,MAAM,UACNC,aAAW,OACXC,UAAW,SAAAC,GACPb,EAAKH,SAAWgB,GAElBC,YAAWvB,EAAO,sBAAmBwB,EACrCC,gBAAc,OACdC,QAAShB,KAAKT,cAEbY,EAAAC,EAAAC,cAACY,EAAAb,EAAD,OAiBDD,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAQd,KAAMA,EAAMM,SAAUI,KAAKJ,SAAUuB,YAAU,EAACC,eAAa,GAClE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,gBAAiBC,EAApBF,EAAoBE,UAApB,OACCpB,EAAAC,EAAAC,cAACmB,EAAApB,EAADqB,OAAAC,OAAA,GACMJ,EADN,CAEEK,GAAG,iBACHC,MAAO,CAAEC,gBAA+B,WAAdN,EAAyB,aAAe,mBAElEpB,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACED,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAmB4B,YAAajC,EAAKL,aACnCS,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAUY,QAASjB,EAAKL,YAAayC,UAAWC,IAASC,GAAG,KAA5D,QACAlC,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAUY,QAASjB,EAAKL,YAAayC,UAAWC,IAASC,GAAG,iBAA5D,gCAhEDC,IAAMC,WAiFZC,uBA3FA,SAAAC,GAAK,MAAK,CACvBrD,OAAQ,CACNsD,QAAS,QAGXC,MAAO,CACLC,YAAkC,EAArBH,EAAMI,QAAQC,QAqFhBN,CAAmBpD,WC7E5B2D,mLACK,IACC9C,EAAYD,KAAKE,MAAjBD,QACV,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ+C,SACtB7C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ8C,SAAS,UACf/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,KACED,EAAAC,EAAAC,cAAC+C,EAAD,MAGAjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkD,QAAQ,KAAK7C,MAAM,UAAUH,UAAWL,EAAQsD,MAC5DpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,OAAK,EAACC,OAAQ,kBAAOxD,EAAAC,EAAAC,cAAA,wCACjDF,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,KAAK,IAAIE,OAAQ,kBAAOxD,EAAAC,EAAAC,cAAA,mCAblBiC,IAAMC,WAiChBC,uBA9CA,SAAAC,GAAK,MAAK,CACvBO,QAAS,CACPY,SAAU,GAEZL,KAAM,CACJK,SAAU,GAEZpD,WAAY,CACVqD,YAAa,GACbjB,YAAa,MAqCFJ,CAAmBO,GCjDjBe,mLAVX,OAEE3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+BALWkC,yEC+CFwB,cA5Cb,SAAAA,EAAY7D,GAAO,IAAAV,EAAA,OAAAiC,OAAAuC,EAAA,EAAAvC,CAAAzB,KAAA+D,IACjBvE,EAAAiC,OAAAwC,EAAA,EAAAxC,CAAAzB,KAAAyB,OAAAyC,EAAA,EAAAzC,CAAAsC,GAAAI,KAAAnE,KAAME,KACDb,MAAQ,CAAC+E,eAAgB,IAC9B5E,EAAK6E,SAAW7E,EAAK6E,SAASC,KAAd7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KAChBA,EAAKgF,sBAAwBhF,EAAKgF,sBAAsBF,KAA3B7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KAJZA,qFAQGG,GACpBK,KAAKP,SAAS,CACV2E,eAAgBzE,EAAMG,OAAO2E,yCAI1B9E,GACPA,EAAM+E,iBACN,IAAIC,EAAc3E,KAAKX,MAAM+E,eAE1BO,IACD3E,KAAKE,MAAM0E,QAAQ,CAACD,gBACpB3E,KAAK6E,KAAKC,KAAKC,QACf/E,KAAKP,SAAS,CACZ2E,eAAgB,uCAKpB,OACEjE,EAAAC,EAAAC,cAAA,QAAM2E,IAAI,OAAOX,SAAUrE,KAAKqE,SAAU/D,UAAU,eAC9CH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CACAtD,GAAG,UACHqD,IAAI,WACJE,MAAM,aACNC,OAAO,QACPV,MAAOzE,KAAKX,MAAM+E,eAClBgB,SAAUpF,KAAKwE,wBAGnBrE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQI,KAAK,SAAS5E,MAAM,WAA5B,eAvCgB6B,IAAMC,mEC6Cf+C,eAvCb,SAAAA,EAAYpF,GAAO,IAAAV,EAAA,OAAAiC,OAAAuC,EAAA,EAAAvC,CAAAzB,KAAAsF,IACjB9F,EAAAiC,OAAAwC,EAAA,EAAAxC,CAAAzB,KAAAyB,OAAAyC,EAAA,EAAAzC,CAAA6D,GAAAnB,KAAAnE,KAAME,KACDqF,aAAe/F,EAAK+F,aAAajB,KAAlB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KACpBA,EAAKgG,YAAchG,EAAKgG,YAAYlB,KAAjB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KAHFA,8EAMjB,IAAIiG,EAAQC,SAAS1F,KAAKE,MAAMuF,OAChCzF,KAAKE,MAAMyF,WAAWF,yCAGtB,IAAIA,EAAQC,SAAS1F,KAAKE,MAAMuF,OAChCzF,KAAKE,MAAM0F,aAAaH,oCAGxB,IAAII,EAAY7F,KAAKE,MAAM4F,KAAKC,KAC5B,OAAS,SAEb,OACI5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWuF,GAChB1F,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,KACAD,EAAAC,EAAAC,cAAC4F,GAAA7F,EAAD,CAAc8F,QAASlG,KAAKE,MAAM4F,KAAKK,OACvChG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQjE,QAAShB,KAAKwF,aACtBrF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,UAIAH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQjE,QAAShB,KAAKuF,cACtBpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oBA5BiBgC,IAAMC,WCgBhB6D,oLAjBH,IAAA5G,EAAAQ,KAEJqG,EAAQrG,KAAKE,MAAMmG,MAAMC,IAAI,SAACR,EAAML,GACtC,OACEtF,EAAAC,EAAAC,cAACkG,GAAD,CAAcC,IAAKf,EAAOK,KAAMA,EAAML,MAAOA,EAAOE,WAAYnG,EAAKU,MAAMyF,WAAYC,aAAcpG,EAAKU,MAAM0F,iBAGpH,OACEzF,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,KACCiG,UAVc/D,IAAMC,WC4BvBmE,oLAEF,OAAOvG,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkD,QAAQ,MAAOtD,KAAKE,MAAMiG,aAFxB7D,IAAMC,WAMzBoE,eACJ,SAAAA,EAAazG,GAAO,IAAAV,EAAA,OAAAiC,OAAAuC,EAAA,EAAAvC,CAAAzB,KAAA2G,IAClBnH,EAAAiC,OAAAwC,EAAA,EAAAxC,CAAAzB,KAAAyB,OAAAyC,EAAA,EAAAzC,CAAAkF,GAAAxC,KAAAnE,KAAME,KACD0E,QAAUpF,EAAKoF,QAAQN,KAAb7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KACfA,EAAKmG,WAAanG,EAAKmG,WAAWrB,KAAhB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KAClBA,EAAKoG,aAAepG,EAAKoG,aAAatB,KAAlB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAjC,KACpBA,EAAKH,MAAM,CAACuH,SAAUpH,EAAKU,MAAM0G,UALfpH,uEAQZqH,GACN7G,KAAKE,MAAM0G,SAASE,QAAQ,CAC1BrB,MAAOzF,KAAKE,MAAM0G,SAASG,OAAO,EAClCZ,KAAMU,EAASlC,YACfoB,MAAM,IAER/F,KAAKP,SAAS,CAACmH,SAAU5G,KAAKE,MAAM0G,8CAE1BI,GACVhH,KAAKE,MAAM0G,SAASK,OAAOD,EAAW,GACtChH,KAAKP,SAAS,CAACmH,SAAU5G,KAAKE,MAAM0G,gDAEzBI,GACX,IAAIlB,EAAO9F,KAAKE,MAAM0G,SAASI,GAC/BhH,KAAKE,MAAM0G,SAASK,OAAOD,EAAW,GACtClB,EAAKC,MAAQD,EAAKC,KAClBD,EAAKC,KAAO/F,KAAKE,MAAM0G,SAASM,KAAKpB,GAAQ9F,KAAKE,MAAM0G,SAASE,QAAQhB,GACzE9F,KAAKP,SAAS,CAACmH,SAAU5G,KAAKE,MAAM0G,4CAE7B,IACC3G,EAAYD,KAAKE,MAAjBD,QAGR,OAEIE,EAAAC,EAAAC,cAAC8G,EAAA/G,EAAD,CAAO0F,MAAI,GACX3F,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAO9G,UAAWL,EAAQ0G,UAC1BxG,EAAAC,EAAAC,cAACgH,GAAD,CAAYlB,KAAMnG,KAAKE,MAAMoH,WAC7BnH,EAAAC,EAAAC,cAACkH,GAAD,CAAUlB,MAAOrG,KAAKE,MAAM0G,SAAUjB,WAAY3F,KAAK2F,WAAYC,aAAc5F,KAAK4F,eACtFzF,EAAAC,EAAAC,cAACmH,EAAD,CAAa5C,QAAS5E,KAAK4E,mBAtCZtC,IAAMC,WAoDdC,wBA3EA,SAAAC,GAAK,MAAK,CACvBkE,SAAU,CACRc,MAAO,OACPC,SAAU,IACVC,SAAU,IACVC,gBAAiBnF,EAAMoF,QAAQC,WAAWnF,MAC1CoF,WAAiC,EAArBtF,EAAMI,QAAQC,KAC1BkF,cAAoC,EAArBvF,EAAMI,QAAQC,QAoElBN,CAAmBmE,ICWjBsB,eAjGf,SAAAA,EAAY/H,GAAO,IAAAV,EAAA,OAAAiC,OAAAuC,EAAA,EAAAvC,CAAAzB,KAAAiI,IACjBzI,EAAAiC,OAAAwC,EAAA,EAAAxC,CAAAzB,KAAAyB,OAAAyC,EAAA,EAAAzC,CAAAwG,GAAA9D,KAAAnE,KAAME,KAYRgI,UAAY,WACV1I,EAAKC,SAALgC,OAAA0G,EAAA,EAAA1G,CAAA,GAAkBjC,EAAKH,MAAvB,CAA8B+I,YAAY,KAY1C,IACIC,EAAY,GAChBA,EAAUnB,KAAK,CAACzB,MAAO,EAAGU,KAAM,OAAQmC,SAAU,QAASC,SAAU,EAAGlD,KAAM,MAAOU,MAAM,IAC3FsC,EAAUnB,KAAK,CAACzB,MAAO,EAAGU,KAAM,SAAUmC,SAAU,QAASC,SAAU,EAAGlD,KAAM,MAAOU,MAAM,IAC7FsC,EAAUnB,KAAK,CAACzB,MAAO,EAAGU,KAAM,cAAemC,SAAU,UAAWC,SAAU,EAAGlD,KAAM,QAASU,MAAM,IAGtG,IACIyC,EAAY,GAChBA,EAAUtB,KAAK,CAACzB,MAAO,EAAGU,KAAM,OAAQmC,SAAU,UAAWC,SAAU,EAAGlD,KAAM,IAAKU,MAAM,IAC3FyC,EAAUtB,KAAK,CAACzB,MAAO,EAAGU,KAAM,aAAcmC,SAAU,UAAWC,SAAU,EAAGlD,KAAM,OAAQU,MAAM,IACpGyC,EAAUtB,KAAK,CAACzB,MAAO,EAAGU,KAAM,cAAemC,SAAU,OAAQC,SAAU,EAAGlD,KAAM,KAAMU,MAAM,IAxBhF,IA2BV0C,EACJ,SAAAA,EAAYnB,EAAUoB,GAAW,IAAA3I,EAAAC,KAAAyB,OAAAuC,EAAA,EAAAvC,CAAAzB,KAAAyI,GAC/BzI,KAAKsH,SAAWA,EAChBtH,KAAK4G,SAAW,GAChB8B,EAAUC,QAAQ,SAAA7C,GAChB/F,EAAK6G,SAASM,KAAK,CAACzB,MAAOK,EAAKL,MAAOU,KAAML,EAAKK,KAAMmC,SAAUxC,EAAKwC,SAAUC,SAAUzC,EAAKyC,SAAUlD,KAAMS,EAAKT,KAAMU,KAAMD,EAAKC,UAMxI6C,EAAY,GAChBA,EAAU1B,KAAK,IAAIuB,EA1BH,cA0BuBJ,IACvCO,EAAU1B,KAAK,IAAIuB,EApBH,QAoBuBD,IACvCI,EAAU1B,KAAK,IAAIuB,EA5BH,cA4BuBJ,IACvCO,EAAU1B,KAAK,IAAIuB,EAtBH,QAsBuBD,IAEvChJ,EAAKC,SAAS,CAACoJ,UAAWD,EACVR,YAAY,KAxD5B5I,EAAKH,MAAQ,CACX+I,YAAY,EACZS,UAAW,IAJIrJ,mFASjBQ,KAAKkI,6CAwDL,IAAIY,EAAgB9I,KAAKX,MAAMwJ,UAAUvC,IAAI,SAACyC,EAAMtD,GAClD,OAAStF,EAAAC,EAAAC,cAAC2I,GAAD,CAAUxC,IAAKf,EAAO6B,SAAUyB,EAAKzB,SAAUV,SAAUmC,EAAKnC,aAKvE,OAGEzG,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8G,EAAA/G,EAAD,CAAM6I,WAAS,EAACC,UAAU,MAAMC,QAAQ,eAAeC,WAAW,aAAavG,QAAS,IAEvFiG,WA/EkBvG,aC0BT8G,4LAnBZ,OAIElJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACArD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOE,OAAK,EAACD,KAAK,IAAItB,UAAW2B,IACjC3D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOC,KAAK,gBAAgBtB,UAAW8F,KACvC9H,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOrB,UAAW,kBAAOhC,EAAAC,EAAAC,cAAA,yCAbRkC,wBCgBV+G,oLAbX,OACEnJ,EAAAC,EAAAC,cAACkJ,GAAA,iBAAD,CAAkBC,SAAUC,0BAC5BtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAD,MACAD,EAAAC,EAAAC,cAACsJ,EAAD,MACAxJ,EAAAC,EAAAC,cAACuJ,GAAD,eAPYrH,aCGEsH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASvG,OACLxD,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACAhK,EAAAC,EAAAC,cAAC+J,GAAD,OAEGC,SAASC,eAAe,SDsHzB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.498f1ff2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  TopNav: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass TopNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.TopNav}>\r\n        <div>\r\n\r\n        <IconButton \r\n        className={classes.menuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <MenuIcon />\r\n                     \r\n           \r\n          \r\n        </IconButton>\r\n\r\n          {/* <Button\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            Toggle Menu Grow\r\n          </Button> */}\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/'>Home</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/ShoppingList'>Shopping List</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TopNav from './TopNav';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n});\r\n\r\nclass TopMenuBar extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <TopNav />\r\n \r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          <Switch>\r\n            <Route path='/ShoppingList' exact render={() => (<div>Foodi - Shopping Lists</div>)} />\r\n            <Route path='/' render={() => (<div>Foodi</div>)} />\r\n          </Switch>\r\n          </Typography>\r\n          \r\n          {/* <Button color=\"inherit\"><AddIcon /></Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nTopMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenuBar);","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        \r\n        <div>\r\n        <h2>Home Page</h2>\r\n        </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\n\r\nclass AddItemForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {textFieldValue: ''};\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\r\n  \r\n    }\r\n  \r\n    handleTextFieldChange(event) {\r\n      this.setState({\r\n          textFieldValue: event.target.value\r\n      });\r\n    }\r\n    \r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemName = this.state.textFieldValue;\r\n      \r\n      if(newItemName) {\r\n        this.props.addItem({newItemName});\r\n        this.refs.form.reset();\r\n        this.setState({\r\n          textFieldValue: ''\r\n        });\r\n      }\r\n    }\r\n    render () {\r\n      return (\r\n        <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\" >\r\n              <TextField\r\n              id=\"additem\"\r\n              ref=\"itemName\"\r\n              label=\"add item..\"\r\n              margin=\"dense\"\r\n              value={this.state.textFieldValue} \r\n              onChange={this.handleTextFieldChange}\r\n              />\r\n          \r\n          <Button type=\"submit\" color=\"primary\">Add</Button> \r\n        </form>\r\n      );   \r\n    }\r\n  }\r\n\r\n  export default AddItemForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nclass ShoppingItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickClose = this.onClickClose.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickClose() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.removeItem(index);\r\n    }\r\n    onClickDone() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.markItemDone(index);\r\n    }\r\n    render () {\r\n      var DoneClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n          \r\n      return(\r\n          <div className={DoneClass}>\r\n          <ListItem>\r\n          <ListItemText primary={this.props.item.name} />\r\n          <Button onClick={this.onClickDone} >\r\n          <i className=\"material-icons\" >\r\n          check\r\n          </i>\r\n          </Button>\r\n          <Button onClick={this.onClickClose} >\r\n          <i className=\"material-icons\" >\r\n          delete\r\n          </i>\r\n          </Button>\r\n          </ListItem>\r\n          </div>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ShoppingItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ShoppingItem from './ShoppingItem';\r\n\r\n\r\nclass ItemView extends React.Component {\r\n    render () {\r\n  \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <ShoppingItem key={index} item={item} index={index} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n        );\r\n      });\r\n      return (\r\n        <List >\r\n        {items}\r\n        </List>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemView;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '../css/ListView.css' \r\nimport { Paper } from 'material-ui';\r\nimport AddItemForm from './AddItemForm';\r\nimport ItemView from './ItemView';\r\n\r\nconst styles = theme => ({\r\n  ListView: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    minWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    \r\n    \r\n  },\r\n\r\n \r\n});\r\n\r\n\r\n  \r\nclass ListHeader extends React.Component {\r\n  render () {\r\n    return <Typography variant=\"h6\" >{this.props.name}</Typography>;\r\n  }\r\n}\r\n  \r\nclass ListView extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.markItemDone = this.markItemDone.bind(this);\r\n    this.state={ItemList: this.props.ItemList};\r\n    \r\n  }\r\n  addItem(todoItem) {\r\n    this.props.ItemList.unshift({\r\n      index: this.props.ItemList.length+1, \r\n      name: todoItem.newItemName, \r\n      done: false\r\n    });\r\n    this.setState({ItemList: this.props.ItemList});\r\n  }\r\n  removeItem (itemIndex) {\r\n    this.props.ItemList.splice(itemIndex, 1);\r\n    this.setState({ItemList: this.props.ItemList});\r\n  }\r\n  markItemDone(itemIndex) {\r\n    var item = this.props.ItemList[itemIndex];\r\n    this.props.ItemList.splice(itemIndex, 1);\r\n    item.done = !item.done;\r\n    item.done ? this.props.ItemList.push(item) : this.props.ItemList.unshift(item);\r\n    this.setState({ItemList: this.props.ItemList});  \r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n     \r\n\r\n    return (\r\n      \r\n        <Grid  item  >\r\n        <Paper className={classes.ListView}>\r\n        <ListHeader name={this.props.ListName} />\r\n        <ItemView items={this.props.ItemList} removeItem={this.removeItem} markItemDone={this.markItemDone}/>\r\n        <AddItemForm addItem={this.addItem} />\r\n        </Paper>\r\n        </Grid>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nListView.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ListView);\r\n","import React, { Component } from 'react';\r\nimport ListView from './ListView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nclass ShoppingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: false,\r\n      listgroup: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n\r\n  fetchData = () => {\r\n    this.setState({...this.state, isFetching: true})\r\n\r\n\r\n    { // this is where fetch command would run \r\n    }\r\n    {/* https://code.tutsplus.com/tutorials/fetching-data-in-your-react-application--cms-30670 \r\n      fetch(QUOTE_SERVICE_URL)\r\n    .then(response => response.json())\r\n    .then(result => this.setState({quotes: result, \r\n                                   isFetching: false}))\r\n    .catch(e => console.log(e)); */}\r\n\r\n    var ListName1 = \"Stop & Shop\";\r\n    var ItemList1 = [];\r\n    ItemList1.push({index: 1, name: \"milk\", category: \"dairy\", quantity: 1, type: \"gal\", done: false});\r\n    ItemList1.push({index: 2, name: \"cheese\", category: \"dairy\", quantity: 2, type: \"cup\", done: true});\r\n    ItemList1.push({index: 3, name: \"wheat bread\", category: \"general\", quantity: 1, type: \"whole\", done: true});\r\n    \r\n  \r\n    var ListName2 = \"Shaws\";\r\n    var ItemList2 = [];\r\n    ItemList2.push({index: 1, name: \"soda\", category: \"general\", quantity: 2, type: \"L\", done: false});\r\n    ItemList2.push({index: 2, name: \"sour worms\", category: \"general\", quantity: 1, type: \"unit\", done: false});\r\n    ItemList2.push({index: 3, name: \"ground beef\", category: \"meat\", quantity: 1, type: \"lb\", done: true});\r\n    \r\n        \r\n    class ListData {\r\n      constructor(ListName, ListItems) {\r\n        this.ListName = ListName;\r\n        this.ItemList = [];\r\n        ListItems.forEach(item => {\r\n          this.ItemList.push({index: item.index, name: item.name, category: item.category, quantity: item.quantity, type: item.type, done: item.done});\r\n  \r\n        });\r\n      }\r\n    };\r\n\r\n    var ListGroup = [];\r\n    ListGroup.push(new ListData(ListName1, ItemList1));\r\n    ListGroup.push(new ListData(ListName2, ItemList2));\r\n    ListGroup.push(new ListData(ListName1, ItemList1));\r\n    ListGroup.push(new ListData(ListName2, ItemList2));\r\n\r\n    this.setState({listgroup: ListGroup,\r\n                    isFetching: false});\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n    var ListGroupView = this.state.listgroup.map((list, index) => {\r\n      return ( <ListView key={index} ListName={list.ListName} ItemList={list.ItemList} />\r\n        );\r\n    });\r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        \r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {ListGroupView}\r\n        \r\n        </Grid>\r\n        \r\n        </div>\r\n        \r\n        \r\n        \r\n      );\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n  export default ShoppingList;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport ShoppingList from './ShoppingList'\r\nimport '../css/MainWindow.css'\r\n\r\n\r\n\r\nclass MainWindow extends Component {\r\n    render() {\r\n\r\n      \r\n\r\n      return (\r\n        \r\n        \r\n          \r\n        <div className=\"MainWindow\">\r\n        <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/ShoppingList' component={ShoppingList}/>\r\n        <Route component={() => (<div>404 Not found </div>)}/>\r\n        </Switch>\r\n        \r\n       \r\n        </div>\r\n        \r\n      );\r\n    };\r\n\r\n  }\r\n  \r\n  export default (MainWindow);","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport '../css/App.css';\nimport TopMenuBar from './TopMenuBar';\nimport MainWindow from './MainWindow';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport { getMuiTheme } from 'material-ui/styles';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n      <div className=\"App\">\n      <CssBaseline />\n      <TopMenuBar />\n      <MainWindow />\n      </div>\n      </MuiThemeProvider>\n      \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render((\n    <HashRouter>\n    <App />\n    </HashRouter>\n    ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}