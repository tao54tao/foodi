{"version":3,"sources":["components/TopMenuBar/TopNav.js","components/TopMenuBar/DrawerNav.js","components/TopMenuBar/SwipeableTemporaryDrawer.js","components/TopMenuBar/TopMenuBar.js","components/Home/Home.js","components/Shopping/AddItemForm.js","components/Shopping/ShoppingItem.js","components/Shopping/ItemList.js","components/Shopping/ListDelAlertDialog.js","components/Shopping/ListMenu.js","components/Shopping/ShoppingList.js","components/Shopping/ShoppingHome.js","components/Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","state","open","handleToggle","_this","setState","handleClose","event","anchorEl","contains","target","_this2","this","classes","props","react_default","a","createElement","className","IconButton_default","menuButton","color","aria-label","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Menu_default","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","Object","assign","id","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","component","NavLink","to","React","Component","withStyles","theme","display","paper","marginRight","spacing","unit","DrawerNav","toggleDrawer","sideList","list","List_default","text","icon","path","map","link","index","ListItem_default","button","key","ListItemIcon_default","ListItemText_default","primary","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","width","SwipeableTemporaryDrawer","Button_default","TopMenuBar","handleClick","addButton","ButtonExist","show","hide","topMenu","AppBar_default","position","Toolbar_default","TopMenuBar_DrawerNav","Typography_default","variant","ml","grow","title","Add_default","flexGrow","minWidth","textAlign","marginLeft","Home","components_TopMenuBar_TopMenuBar","index_es","AddItemForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","textFieldValue","quantityFieldValue","typeFieldValue","onSubmit","bind","assertThisInitialized","handleTextFieldChange","handleQuantityFieldChange","handleTypeFieldChange","value","preventDefault","newItemName","newQuantity","newType","newItem","name","quantity","type","addItem","listKey","core_index_es","item","autoComplete","container","direction","wrap","nameFieldWrap","nameField","ref","label","onChange","fullWidth","quantityField","FormControl_default","typeField","InputLabel_default","htmlFor","Select_default","ShoppingItem","onClickDel","onClickDone","itemIndex","parseInt","listIndex","removeItem","markItemDone","DoneClass","done","itemRow","alignItems","itemName","noWrap","itemQuantity","itemType","paddingTop","paddingBottom","textOverflow","whiteSpace","overflow","paddingLeft","paddingRight","padding","ItemList","items","Shopping_ShoppingItem","ListDelAlertDialog","handleCancel","handleConfirm","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","ListMenu","delAlertOpen","handleEditBtn","console","log","handleDelBtn","handleDelAlertClose","handleDelConfirm","listDel","Shopping_ListDelAlertDialog","MenuButton","ShoppingList","Grid_default","ListGrid","FullWidth","justify","ListTitle","align","ListName","Shopping_ListMenu","listName","Shopping_ItemList","itemDel","itemDone","Shopping_AddItemForm","itemAdd","maxWidth","backgroundColor","palette","background","ShoppingHome","ShoppingListArray","listGroup","components_Shopping_ShoppingList","listAdd","Settings","resetApp","setSampleData","App","addList","arguments","length","push","removeList","ListKey","splice","ItemKey","List","ListItem","unshift","ItemList1","ItemList2","isFetching","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","removeEventListener","localStorage","setItem","JSON","stringify","hasOwnProperty","getItem","parse","defineProperty","e","styles","muiTheme","getMuiTheme","CssBaseline_default","react_router","exact","render","components_Shopping_ShoppingHome","components_Settings_Settings","Boolean","location","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e233d8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  TopNav: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass TopNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.TopNav}>\r\n        <div>\r\n\r\n        <IconButton \r\n        className={classes.menuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <MenuIcon />\r\n                     \r\n           \r\n          \r\n        </IconButton>\r\n\r\n          {/* <Button\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            Toggle Menu Grow\r\n          </Button> */}\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/'>Home</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/Shopping'>Shopping List</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/Settings'>Settings</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  \r\n};\r\n\r\nclass DrawerNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n       \r\n  };\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      open: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          {[{text: 'Home', icon: 'home', path: '/'},\r\n            {text: 'Shopping List', icon: 'shopping_cart', path: '/Shopping'},\r\n            {text: 'Settings', icon: 'settings', path: '/Settings'}].map((link, index) => (\r\n              <ListItem button key={link.text} component={NavLink} to={link.path}>\r\n                <ListItemIcon><i className=\"material-icons\">{link.icon}</i></ListItemIcon>\r\n                <ListItemText primary={link.text} />\r\n              </ListItem>\r\n            ))}\r\n\r\n        </List>\r\n        \r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n        <MenuIcon />\r\n        </IconButton>\r\n\r\n        <SwipeableDrawer\r\n          open={this.state.open}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </SwipeableDrawer>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawerNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DrawerNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  \r\n};\r\n\r\nclass SwipeableTemporaryDrawer extends React.Component {\r\n  state = {\r\n    open: false,\r\n       \r\n  };\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      open: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          {[{text: 'Home', icon: 'home', path: '/'},\r\n            {text: 'Shopping List', icon: 'playlist_add_check', path: '/Shopping'},\r\n            {text: 'Settings', icon: 'settings', path: '/Settings'}].map((link, index) => (\r\n              <ListItem button key={link.text} component={NavLink} to={link.path}>\r\n                <ListItemIcon><i className=\"material-icons\">{link.icon}</i></ListItemIcon>\r\n                <ListItemText primary={link.text} />\r\n              </ListItem>\r\n            ))}\r\n        </List>\r\n        \r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n        <MenuIcon />\r\n        </IconButton>\r\n        <Button onClick={this.toggleDrawer('left', true)}>Open Left</Button>\r\n\r\n        <SwipeableDrawer\r\n          open={this.state.open}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </SwipeableDrawer>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SwipeableTemporaryDrawer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TopNav from './TopNav';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DrawerNav from './DrawerNav';\r\nimport SwipeableTemporaryDrawer from './SwipeableTemporaryDrawer';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n    minWidth: 320,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  }\r\n});\r\n\r\nclass TopMenuBar extends React.Component {\r\n\r\n\r\n  handleClick = () => {\r\n    // set the addButton prop to handleClick function only if the prop was passed to TopMenuBar component\r\n    if (this.props.addButton) {\r\n      this.props.addButton();\r\n\r\n    }\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    // If the addButton prop exists, then set the ButtonExist to to have the show CSS class\r\n    // If it does not exist, set to hide\r\n\r\n    var ButtonExist = this.props.addButton ? \r\n    classes.show : classes.hide;\r\n\r\n\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          \r\n          <DrawerNav />\r\n       \r\n          <Typography variant=\"h6\" color=\"inherit\" ml={100} className={classes.grow}>\r\n          {this.props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={this.handleClick} className={ButtonExist}><AddIcon /></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nTopMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenuBar);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport Typography from 'material-ui/styles/typography';\r\nimport { Paper } from 'material-ui';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"MainWindow\">\r\n        <TopMenuBar title=\"Foodi\" />\r\n        <Paper>\r\n          <p>Test Home Page paper</p>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { Button, TextField, ListItemText } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { List, ListItem } from 'material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {spacing} from '@material-ui/system';\r\nimport { left } from '@material-ui/system/positions';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n  nameField: {\r\n    marginRight: theme.spacing.unit,\r\n    \r\n  },\r\n\r\n  nameFieldWrap: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  \r\n  quantityField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 40,\r\n  },\r\n\r\n  typeField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 60,\r\n    },\r\n\r\n  addButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  }\r\n  \r\n});\r\n\r\nclass AddItemForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {textFieldValue: '',\r\n                    quantityFieldValue: '',\r\n                    typeFieldValue: ''};\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\r\n      this.handleQuantityFieldChange = this.handleQuantityFieldChange.bind(this);\r\n      this.handleTypeFieldChange = this.handleTypeFieldChange.bind(this);\r\n\r\n    }\r\n\r\n  \r\n    handleTextFieldChange(event) {\r\n      this.setState({\r\n          textFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    handleQuantityFieldChange(event) {\r\n      this.setState({\r\n          quantityFieldValue: event.target.value\r\n      });\r\n    }\r\n    \r\n    handleTypeFieldChange(event) {\r\n      this.setState({\r\n          typeFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemName = this.state.textFieldValue;\r\n      var newQuantity = this.state.quantityFieldValue;\r\n      var newType = this.state.typeFieldValue;\r\n      \r\n      if(newItemName) {\r\n        var newItem = {};\r\n        newItem.name = newItemName;\r\n        newItem.quantity = newQuantity;\r\n        newItem.type = newType;\r\n        \r\n        this.props.addItem(this.props.listKey,newItem);\r\n        this.setState({\r\n        textFieldValue: '',\r\n        quantityFieldValue: '',\r\n        typeFieldValue: ''\r\n        });\r\n        \r\n        \r\n      }\r\n    }\r\n    render () {\r\n      const {classes} = this.props;\r\n      \r\n      return (\r\n        \r\n        <Grid item>\r\n        <form onSubmit={this.onSubmit} autoComplete='off'>\r\n        <Grid container direction=\"row\" wrap=\"nowrap\">\r\n        \r\n        <Grid item className={classes.nameFieldWrap}>\r\n        <TextField className={classes.nameField}\r\n        id=\"itemName\"\r\n        ref=\"itemName\"\r\n        label=\"add item..\"\r\n        value={this.state.textFieldValue} \r\n        onChange={this.handleTextFieldChange}\r\n        fullWidth\r\n        \r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <TextField className={classes.quantityField}\r\n        id=\"itemQuantity\"\r\n        ref=\"itemQuantity\"\r\n        label=\"qty\"\r\n        value={this.state.quantityFieldValue} \r\n        onChange={this.handleQuantityFieldChange}\r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <FormControl className={classes.typeField}>\r\n        <InputLabel htmlFor=\"type\">unit</InputLabel>\r\n          <Select\r\n            value={this.state.typeFieldValue}\r\n            onChange={this.handleTypeFieldChange}\r\n            \r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>none</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"gal\">gal</MenuItem>\r\n            <MenuItem value=\"lb\">lb</MenuItem>\r\n            <MenuItem value=\"box\">box</MenuItem>\r\n            <MenuItem value=\"L\">L</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n        \r\n        <IconButton className={classes.addButton} type=\"submit\" color=\"primary\" variant=\"contained\">\r\n        <i className=\"material-icons\">\r\n        add_shopping_cart\r\n        </i>\r\n        </IconButton>\r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n        </Grid>\r\n        \r\n\r\n        \r\n      );   \r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(AddItemForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  itemRow: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n\r\n  },\r\n\r\n  itemName: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n\r\n\r\n  },\r\n\r\n  noWrap: {\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n\r\n  },\r\n\r\n  itemQuantity: {\r\n    width: 40,\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing.unit,\r\n    textAlign: 'right',\r\n\r\n\r\n    \r\n  },\r\n\r\n  itemType: {\r\n    width: 40,\r\n    padding: 0,\r\n    textAlign: 'left',\r\n    paddingRight: theme.spacing.unit,\r\n    \r\n  },\r\n\r\n \r\n});\r\n\r\nclass ShoppingItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickDel = this.onClickDel.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickDel() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.removeItem(listIndex,itemIndex);\r\n    }\r\n    onClickDone() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.markItemDone(listIndex,itemIndex);\r\n    }\r\n    render () {\r\n      const { classes } = this.props;\r\n      var DoneClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n     \r\n          \r\n      return(\r\n          <div className={DoneClass}>\r\n          <ListItem className={classes.itemRow}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n          <Grid item className={classes.itemName}><Typography variant=\"subheading\" color=\"inherit\" className={classes.noWrap}>{this.props.item.name}</Typography></Grid>\r\n          <Grid item className={classes.itemQuantity}><Typography variant=\"subheading\" color=\"inherit\" >{this.props.item.quantity}</Typography></Grid>\r\n          <Grid item className={classes.itemType}><Typography variant=\"subheading\" color=\"inherit\" >{this.props.item.type}</Typography></Grid>\r\n          <Grid item><IconButton onClick={this.onClickDone} color=\"inherit\" >\r\n          <i className=\"material-icons\" >\r\n          check\r\n          </i>\r\n          </IconButton></Grid>\r\n          <Grid item><IconButton onClick={this.onClickDel} >\r\n          <i className=\"material-icons\" >\r\n          delete\r\n          </i>\r\n          </IconButton></Grid>\r\n          </Grid>\r\n          </ListItem>\r\n          </div>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(ShoppingItem);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nclass ItemList extends React.Component {\r\n    render () {\r\n       \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <ShoppingItem item={item} index={index} listKey={this.props.listKey} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n          \r\n        );\r\n      });\r\n      return (\r\n        <Grid item>\r\n        <List >\r\n        {items}\r\n        </List>\r\n        </Grid>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemList;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass ListDelAlertDialog extends React.Component {\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    this.props.handleConfirm();\r\n    this.props.handleClose();\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Dialog\r\n          open={this.props.open}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirm Delete\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n          This will delete the list.  Are you sure? </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleConfirm} color=\"secondary\" autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListDelAlertDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ListDelAlertDialog from './ListDelAlertDialog';\r\nimport { List } from '@material-ui/core';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  ListMenu: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass ListMenu extends React.Component {\r\n  state = {\r\n    open: false,\r\n    delAlertOpen: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleEditBtn = () => {\r\n    this.setState({ open: false });\r\n    console.log(\"Edit BTN\")\r\n    }\r\n    \r\n\r\n  handleDelBtn = () => {\r\n    \r\n    this.setState({ open: false, delAlertOpen: true });\r\n    }\r\n  \r\n  handleDelAlertClose = () => {\r\n    this.setState({delAlertOpen: false})\r\n  }\r\n\r\n  handleDelConfirm = () => {\r\n    this.props.listDel(this.props.listKey);\r\n\r\n  }\r\n\r\n    \r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.ListMenu}>\r\n        <div>\r\n        <ListDelAlertDialog \r\n        open={this.state.delAlertOpen} \r\n        handleClose={this.handleDelAlertClose} \r\n        handleConfirm={this.handleDelConfirm} />\r\n        \r\n        <IconButton \r\n        className={classes.MenuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <i className=\"material-icons\" >\r\n            more_vert\r\n            </i>\r\n                     \r\n                    \r\n        </IconButton>\r\n\r\n\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleEditBtn} >Edit List Title</MenuItem>\r\n                      <MenuItem onClick={this.handleDelBtn} >Delete List</MenuItem>\r\n                      \r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ListMenu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './ShoppingList.css' \r\nimport { Paper } from 'material-ui';\r\nimport AddItemForm from './AddItemForm';\r\nimport ItemList from './ItemList';\r\nimport List from '@material-ui/core/List';\r\nimport { ListItem } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListMenu from './ListMenu';\r\n\r\nconst styles = theme => ({\r\n  ListGrid : {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    minWidth: 320,\r\n\r\n  },\r\n  FullWidth : {\r\n    width: '100%',\r\n  },\r\n\r\n  ListTitle: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n\r\n  ShoppingList: {\r\n    \r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    \r\n    \r\n    \r\n  },\r\n\r\n \r\n});\r\n\r\n\r\n  \r\nclass ShoppingList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n      \r\n\r\n    return (\r\n      \r\n        <Grid  item className={classes.ListGrid}>\r\n        <Paper className={classes.ShoppingList}>\r\n        <Grid className={classes.FullWidth} container direction=\"column\" wrap=\"nowrap\" justify=\"flex-start\">\r\n          <Grid item >\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\" >\r\n            <Grid item className={classes.ListTitle}><Typography variant=\"h6\" align=\"center\">{this.props.ListName}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n            <ListMenu listDel={this.props.listDel} listKey={this.props.index} listName={this.props.ListName}/>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n          <ItemList listKey={this.props.index} items={this.props.ItemList} removeItem={this.props.itemDel} markItemDone={this.props.itemDone}/>\r\n          <AddItemForm listKey={this.props.index} addItem={this.props.itemAdd} />\r\n        </Grid>\r\n        </Paper>\r\n        </Grid>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ShoppingList);\r\n","import React, { Component } from 'react';\r\nimport ShoppingList from './ShoppingList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './ShoppingHome.css';\r\n\r\n\r\nclass ShoppingHome extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n  }\r\n    \r\n    render() {\r\n\r\n    var ShoppingListArray = this.props.listGroup.map((list, index) => {\r\n      \r\n      return ( <ShoppingList \r\n        index={index} \r\n        ListName={list.ListName} \r\n        ItemList={list.ItemList} \r\n        listDel={this.props.listDel} \r\n        itemAdd={this.props.itemAdd} \r\n        itemDel={this.props.itemDel} \r\n        itemDone={this.props.itemDone} />\r\n        );\r\n    });\r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        <TopMenuBar title=\"Foodi - Shopping Lists\" addButton={this.props.listAdd} />\r\n        <div className=\"MainWindow\">\r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {ShoppingListArray}\r\n        \r\n        </Grid>\r\n        </div>\r\n        </div>\r\n        \r\n               \r\n        \r\n      );\r\n      \r\n    }\r\n\r\n\r\n  }\r\n  \r\n  export default ShoppingHome;","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport Typography from 'material-ui/styles/typography';\r\nimport { Paper } from 'material-ui';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"MainWindow\">\r\n        <TopMenuBar title=\"Foodi - Settings\" />\r\n        <Paper>\r\n          <p>Test Settings Page paper</p>\r\n          <Button onClick={this.props.resetApp}>Reset App</Button>\r\n          <Button onClick={this.props.setSampleData}>Import Sample Data</Button>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Settings;","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from 'material-ui/styles';\r\nimport { getMuiTheme } from 'material-ui/styles';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './components/Home/Home';\r\nimport ShoppingHome from './components/Shopping/ShoppingHome';\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: false,\r\n      listGroup: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.hydrateStateWithLocalStorage();\r\n\r\n    // add event listener to save state to localStorage\r\n    // when user leaves/refreshes the page\r\n    window.addEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n\r\n    // saves if component has a chance to unmount\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    // for every item in React state\r\n    for (let key in this.state) {\r\n      // save to localStorage\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n    }\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetApp = () => {\r\n    this.setState({listGroup: []});\r\n\r\n  }\r\n\r\n\r\n  // function to make new list in component state.  takes in ListName and ItemList array as arguments\r\n  addList = (ListName=\"New Shopping List\", ItemList=[]) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.push({ListName, ItemList});\r\n    this.setState({listGroup: listGroup});      \r\n    \r\n  }\r\n\r\n  // function to remove list.  takes in ListKey as argument. \r\n\r\n  removeList = (ListKey) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.splice(ListKey, 1);\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to remove item from specified list in state.  takes in ListKey and ItemKey as arguments\r\n  removeItem = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.splice(ItemKey, 1);\r\n    listGroup[ListKey].ItemList = List; \r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to add item from specified list in state.  takes in ListKey, ListItem as arguments\r\n  // ListItem has these props:  item.name, item.quantity, item.type, item.done\r\n\r\n  addItem = (ListKey, ListItem={quantity: \"\", type: \"\"}) => {\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.unshift({\r\n      name: ListItem.name,\r\n      quantity: ListItem.quantity,\r\n      type: ListItem.type,\r\n      done: false\r\n    });\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to mark an item as done.  takes in ListKey, ItemKey as arguments\r\n\r\n  markItemDone = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    var item = List[ItemKey];\r\n    item.done = !item.done;\r\n    List[ItemKey] = item;\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n\r\n\r\n  setSampleData = () => {\r\n    \r\n    var ListName1 = \"Trader Joes\";\r\n    var ItemList1 = [];\r\n    ItemList1.push({name: \"milk\", quantity: 1, type: \"gal\", done: false});\r\n    ItemList1.push({name: \"cheese\", quantity: 2, type: \"cup\", done: true});\r\n    ItemList1.push({name: \"wheat bread\", quantity: 1, type: \"\", done: true});\r\n    \r\n  \r\n    var ListName2 = \"Shaws\";\r\n    var ItemList2 = [];\r\n    ItemList2.push({name: \"soda\", quantity: 2, type: \"L\", done: false});\r\n    ItemList2.push({name: \"sour worms\", quantity: 1, type: \"\", done: false});\r\n    ItemList2.push({name: \"ground beef\", quantity: 1, type: \"lb\", done: true});\r\n\r\n    this.addList(ListName1,ItemList1);\r\n    this.addList(ListName2,ItemList2);    \r\n    this.setState({isFetching: false});\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n      <div className=\"App\">\r\n      <CssBaseline />\r\n      \r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/Shopping' \r\n        render={(props) => <ShoppingHome {...props} \r\n        listGroup={this.state.listGroup}\r\n        listDel={this.removeList} \r\n        listAdd={this.addList}\r\n        itemAdd={this.addItem} \r\n        itemDel={this.removeItem} \r\n        itemDone={this.markItemDone}\r\n        />}\r\n        />\r\n        <Route path='/Settings' \r\n        render={(props) => <Settings {...props} \r\n        resetApp={this.resetApp}\r\n        setSampleData={this.setSampleData}\r\n        />}\r\n        />\r\n        <Route component={() => (<div>404 Not found </div>)}/>\r\n        </Switch>\r\n      </div>\r\n      </MuiThemeProvider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}