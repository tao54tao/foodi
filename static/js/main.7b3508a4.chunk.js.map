{"version":3,"sources":["components/TopMenuBar/TopNav.js","components/TopMenuBar/TopMenuBar.js","components/Home/Home.js","components/ShoppingList/AddItemForm.js","components/ShoppingList/ShoppingItem.js","components/ShoppingList/ItemView.js","components/ShoppingList/ListView.js","components/ShoppingList/ShoppingList.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","state","open","handleToggle","_this","setState","handleClose","event","anchorEl","contains","target","_this2","this","classes","props","react_default","a","createElement","className","IconButton_default","menuButton","color","aria-label","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Menu_default","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","Object","assign","id","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","component","NavLink","to","React","Component","withStyles","theme","display","paper","marginRight","spacing","unit","TopMenuBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","topMenu","AppBar_default","position","Toolbar_default","TopMenuBar_TopNav","Typography_default","variant","ml","grow","title","Button_default","Add_default","flexGrow","textAlign","marginLeft","Home","components_TopMenuBar_TopMenuBar","index_es","AddItemForm","textFieldValue","onSubmit","bind","assertThisInitialized","handleTextFieldChange","value","preventDefault","newItemName","addItem","refs","form","reset","core_index_es","item","ref","label","margin","onChange","type","ShoppingItem","onClickClose","onClickDone","index","parseInt","removeItem","markItemDone","DoneClass","done","ListItem_default","ListItemText_default","primary","name","ItemView","items","map","ShoppingList_ShoppingItem","key","List_default","ListHeader","Grid_default","align","ListView","ItemList","todoItem","unshift","length","itemIndex","splice","push","container","direction","justify","ListView_ListHeader","ListName","ShoppingList_ItemView","ShoppingList_AddItemForm","width","maxWidth","minWidth","backgroundColor","palette","background","paddingTop","paddingBottom","ShoppingList","fetchData","objectSpread","isFetching","ItemList1","category","quantity","ItemList2","ListData","ListItems","forEach","ListGroup","listgroup","ListGroupView","list","components_ShoppingList_ListView","alignItems","App","styles","muiTheme","getMuiTheme","CssBaseline_default","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b3508a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  TopNav: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass TopNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.TopNav}>\r\n        <div>\r\n\r\n        <IconButton \r\n        className={classes.menuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <MenuIcon />\r\n                     \r\n           \r\n          \r\n        </IconButton>\r\n\r\n          {/* <Button\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            Toggle Menu Grow\r\n          </Button> */}\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/'>Home</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/ShoppingList'>Shopping List</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TopNav from './TopNav';\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n});\r\n\r\nclass TopMenuBar extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <TopNav />\r\n \r\n\r\n          <Typography variant=\"h6\" color=\"inherit\" ml={100} className={classes.grow}>\r\n          {this.props.title}\r\n          </Typography>\r\n          \r\n          <Button color=\"inherit\"><AddIcon /></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nTopMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenuBar);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport Typography from 'material-ui/styles/typography';\r\nimport { Paper } from 'material-ui';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n        <TopMenuBar title=\"Foodi\" />\r\n        <Paper>\r\n          <p>Test Home Page paper</p>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { Button, TextField, ListItemText } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { List, ListItem } from 'material-ui';\r\n\r\n\r\nclass AddItemForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {textFieldValue: ''};\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\r\n  \r\n    }\r\n  \r\n    handleTextFieldChange(event) {\r\n      this.setState({\r\n          textFieldValue: event.target.value\r\n      });\r\n    }\r\n    \r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemName = this.state.textFieldValue;\r\n      \r\n      if(newItemName) {\r\n        this.props.addItem({newItemName});\r\n        this.refs.form.reset();\r\n        this.setState({\r\n          textFieldValue: ''\r\n        });\r\n      }\r\n    }\r\n    render () {\r\n      return (\r\n        <Grid item>\r\n        \r\n          <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\" >\r\n        \r\n        \r\n          <TextField\r\n        id=\"additem\"\r\n        ref=\"itemName\"\r\n        label=\"add item..\"\r\n        margin=\"dense\"\r\n        value={this.state.textFieldValue} \r\n        onChange={this.handleTextFieldChange}\r\n        />\r\n        \r\n  \r\n  \r\n        <Button type=\"submit\" color=\"primary\">Add</Button>\r\n        \r\n        </form>\r\n\r\n\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        </Grid>\r\n      );   \r\n    }\r\n  }\r\n\r\n  export default AddItemForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass ShoppingItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickClose = this.onClickClose.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickClose() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.removeItem(index);\r\n    }\r\n    onClickDone() {\r\n      var index = parseInt(this.props.index);\r\n      this.props.markItemDone(index);\r\n    }\r\n    render () {\r\n      var DoneClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n          \r\n      return(\r\n          <div className={DoneClass}>\r\n          <ListItem>\r\n          <ListItemText primary={this.props.item.name} />\r\n          <IconButton onClick={this.onClickDone} >\r\n          <i className=\"material-icons\" >\r\n          check\r\n          </i>\r\n          </IconButton>\r\n          <IconButton onClick={this.onClickClose} >\r\n          <i className=\"material-icons\" >\r\n          delete\r\n          </i>\r\n          </IconButton>\r\n          </ListItem>\r\n          </div>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ShoppingItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nclass ItemView extends React.Component {\r\n    render () {\r\n  \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <ShoppingItem key={index} item={item} index={index} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n        );\r\n      });\r\n      return (\r\n        <Grid item>\r\n        <List >\r\n        {items}\r\n        </List>\r\n        </Grid>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemView;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './ListView.css' \r\nimport { Paper } from 'material-ui';\r\nimport AddItemForm from './AddItemForm';\r\nimport ItemView from './ItemView';\r\n\r\nconst styles = theme => ({\r\n  ListView: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    minWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    \r\n    \r\n  },\r\n\r\n \r\n});\r\n\r\n\r\n  \r\nclass ListHeader extends React.Component {\r\n\r\n  render () {\r\n\r\n        return <Grid item><Typography variant=\"h6\" align=\"center\">{this.props.name}</Typography></Grid>;\r\n  }\r\n}\r\n  \r\nclass ListView extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.markItemDone = this.markItemDone.bind(this);\r\n    this.state={ItemList: this.props.ItemList};\r\n    \r\n  }\r\n  addItem(todoItem) {\r\n    this.props.ItemList.unshift({\r\n      index: this.props.ItemList.length+1, \r\n      name: todoItem.newItemName, \r\n      done: false\r\n    });\r\n    this.setState({ItemList: this.props.ItemList});\r\n  }\r\n  removeItem (itemIndex) {\r\n    this.props.ItemList.splice(itemIndex, 1);\r\n    this.setState({ItemList: this.props.ItemList});\r\n  }\r\n  markItemDone(itemIndex) {\r\n    var item = this.props.ItemList[itemIndex];\r\n    this.props.ItemList.splice(itemIndex, 1);\r\n    item.done = !item.done;\r\n    item.done ? this.props.ItemList.push(item) : this.props.ItemList.unshift(item);\r\n    this.setState({ItemList: this.props.ItemList});  \r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n     \r\n\r\n    return (\r\n      \r\n        <Grid  item  >\r\n        <Paper className={classes.ListView}>\r\n        <Grid container direction=\"column\" justify=\"flex-start\">\r\n        <ListHeader name={this.props.ListName} />\r\n        <ItemView items={this.props.ItemList} removeItem={this.removeItem} markItemDone={this.markItemDone}/>\r\n        <AddItemForm addItem={this.addItem} />\r\n        </Grid>\r\n        </Paper>\r\n        </Grid>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nListView.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ListView);\r\n","import React, { Component } from 'react';\r\nimport ListView from './ListView';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './ShoppingList.css';\r\n\r\n\r\nclass ShoppingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: false,\r\n      listgroup: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n  }\r\n\r\n\r\n  fetchData = () => {\r\n    this.setState({...this.state, isFetching: true})\r\n\r\n\r\n    { // this is where fetch command would run \r\n    }\r\n    {/* https://code.tutsplus.com/tutorials/fetching-data-in-your-react-application--cms-30670 \r\n      fetch(QUOTE_SERVICE_URL)\r\n    .then(response => response.json())\r\n    .then(result => this.setState({quotes: result, \r\n                                   isFetching: false}))\r\n    .catch(e => console.log(e)); */}\r\n\r\n    var ListName1 = \"Stop & Shop\";\r\n    var ItemList1 = [];\r\n    ItemList1.push({index: 1, name: \"milk\", category: \"dairy\", quantity: 1, type: \"gal\", done: false});\r\n    ItemList1.push({index: 2, name: \"cheese\", category: \"dairy\", quantity: 2, type: \"cup\", done: true});\r\n    ItemList1.push({index: 3, name: \"wheat bread\", category: \"general\", quantity: 1, type: \"whole\", done: true});\r\n    \r\n  \r\n    var ListName2 = \"Shaws\";\r\n    var ItemList2 = [];\r\n    ItemList2.push({index: 1, name: \"soda\", category: \"general\", quantity: 2, type: \"L\", done: false});\r\n    ItemList2.push({index: 2, name: \"sour worms\", category: \"general\", quantity: 1, type: \"unit\", done: false});\r\n    ItemList2.push({index: 3, name: \"ground beef\", category: \"meat\", quantity: 1, type: \"lb\", done: true});\r\n    \r\n        \r\n    class ListData {\r\n      constructor(ListName, ListItems) {\r\n        this.ListName = ListName;\r\n        this.ItemList = [];\r\n        ListItems.forEach(item => {\r\n          this.ItemList.push({index: item.index, name: item.name, category: item.category, quantity: item.quantity, type: item.type, done: item.done});\r\n  \r\n        });\r\n      }\r\n    };\r\n\r\n    var ListGroup = [];\r\n    ListGroup.push(new ListData(ListName1, ItemList1));\r\n    ListGroup.push(new ListData(ListName2, ItemList2));\r\n    ListGroup.push(new ListData(ListName1, ItemList1));\r\n    ListGroup.push(new ListData(ListName2, ItemList2));\r\n\r\n    this.setState({listgroup: ListGroup,\r\n                    isFetching: false});\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n    var ListGroupView = this.state.listgroup.map((list, index) => {\r\n      return ( <ListView key={index} ListName={list.ListName} ItemList={list.ItemList} />\r\n        );\r\n    });\r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        <TopMenuBar title=\"Foodi - Shopping Lists\" />\r\n        <div className=\"MainWindow\">\r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {ListGroupView}\r\n        \r\n        </Grid>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n      );\r\n\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n  export default ShoppingList;","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from 'material-ui/styles';\r\nimport { getMuiTheme } from 'material-ui/styles';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './components/Home/Home';\r\nimport ShoppingList from './components/ShoppingList/ShoppingList';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n      <div className=\"App\">\r\n      <CssBaseline />\r\n      \r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/ShoppingList' component={ShoppingList}/>\r\n        <Route component={() => (<div>404 Not found </div>)}/>\r\n        </Switch>\r\n      </div>\r\n      </MuiThemeProvider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}