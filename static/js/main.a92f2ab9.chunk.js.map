{"version":3,"sources":["components/TopMenuBar/TopNav.js","components/TopMenuBar/DrawerNav.js","components/TopMenuBar/TopMenuBar.js","components/Home/Home.js","components/Shopping/AddItemForm.js","components/Shopping/ShoppingItem.js","components/Shopping/ItemList.js","components/Shopping/ListDelAlertDialog.js","components/Shopping/ListMenu.js","components/Shopping/ShoppingList.js","components/Shopping/ShoppingHome.js","components/Settings/Settings.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","state","open","handleToggle","_this","setState","handleClose","event","anchorEl","contains","target","_this2","this","classes","props","react_default","a","createElement","className","IconButton_default","menuButton","color","aria-label","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Menu_default","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","Object","assign","id","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","MenuItem_default","component","NavLink","to","React","Component","withStyles","theme","display","paper","marginRight","spacing","unit","DrawerNav","toggleDrawer","sideList","list","List_default","text","icon","path","map","link","index","ListItem_default","button","key","ListItemIcon_default","ListItemText_default","primary","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","width","TopMenuBar","handleClick","addButton","ButtonExist","show","hide","topMenu","AppBar_default","position","Toolbar_default","TopMenuBar_DrawerNav","Typography_default","variant","ml","grow","title","Add_default","flexGrow","minWidth","textAlign","marginLeft","visibility","Home","components_TopMenuBar_TopMenuBar","index_es","AddItemForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nameFieldValue","quantityFieldValue","typeFieldValue","nameFieldInputRef","onSubmit","bind","assertThisInitialized","handleTextFieldChange","handleQuantityFieldChange","handleTypeFieldChange","value","preventDefault","newItemName","newQuantity","newType","newItem","name","quantity","type","addItem","listKey","focus","core_index_es","item","autoComplete","container","direction","wrap","nameFieldWrap","nameField","ref","label","onChange","fullWidth","inputRef","el","quantityField","FormControl_default","typeField","InputLabel_default","htmlFor","Select_default","ShoppingItem","onClickDel","onClickDone","itemIndex","parseInt","listIndex","removeItem","markItemDone","DoneClass","done","checkBoxIcon","itemRow","alignItems","itemName","noWrap","itemQuantity","itemType","paddingTop","paddingBottom","textOverflow","whiteSpace","overflow","paddingLeft","paddingRight","padding","ItemList","items","Shopping_ShoppingItem","ListDelAlertDialog","handleCancel","handleConfirm","Dialog_default","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","autoFocus","ListMenu","delAlertOpen","handleEditBtn","listNameEdit","handleDelBtn","handleDelAlertClose","handleDelConfirm","listDel","Shopping_ListDelAlertDialog","MenuButton","ShoppingList","nameEdit","listNameSave","handleNameChange","setListName","handleKeyPress","ListNameHeadClass","ListNameFieldClass","Grid_default","ListGrid","FullWidth","justify","ListTitle","align","ListName","onKeyPress","inputProps","fontSize","lineHeight","letterSpacing","Shopping_ListMenu","listName","Shopping_ItemList","itemDel","itemDone","Shopping_AddItemForm","itemAdd","maxWidth","backgroundColor","palette","background","ShoppingHome","listGroup","length","ShoppingListArray","instructionsGrid","notFound","components_Shopping_ShoppingList","listAdd","Settings","resetApp","setSampleData","App","addList","arguments","push","removeList","ListKey","splice","ItemKey","List","ListItem","unshift","ItemList1","ItemList2","isFetching","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","removeEventListener","localStorage","setItem","JSON","stringify","hasOwnProperty","getItem","parse","defineProperty","e","styles","muiTheme","getMuiTheme","CssBaseline_default","react_router","exact","render","components_Shopping_ShoppingHome","components_Settings_Settings","Boolean","location","hostname","match","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a92f2ab9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  TopNav: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass TopNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.TopNav}>\r\n        <div>\r\n\r\n        <IconButton \r\n        className={classes.menuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <MenuIcon />\r\n                     \r\n           \r\n          \r\n        </IconButton>\r\n\r\n          {/* <Button\r\n            buttonRef={node => {\r\n              this.anchorEl = node;\r\n            }}\r\n            aria-owns={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleToggle}\r\n          >\r\n            Toggle Menu Grow\r\n          </Button> */}\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/'>Home</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/Shopping'>Shopping List</MenuItem>\r\n                      <MenuItem onClick={this.handleClose} component={NavLink} to='/Settings'>Settings</MenuItem>\r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTopNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  \r\n};\r\n\r\nclass DrawerNav extends React.Component {\r\n  state = {\r\n    open: false,\r\n       \r\n  };\r\n\r\n  toggleDrawer = (open) => () => {\r\n    this.setState({\r\n      open: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n          {[{text: 'Home', icon: 'home', path: '/'},\r\n            {text: 'Shopping List', icon: 'shopping_cart', path: '/Shopping'},\r\n            {text: 'Settings', icon: 'settings', path: '/Settings'}].map((link, index) => (\r\n              <ListItem button key={link.text} component={NavLink} to={link.path}>\r\n                <ListItemIcon><i className=\"material-icons\">{link.icon}</i></ListItemIcon>\r\n                <ListItemText primary={link.text} />\r\n              </ListItem>\r\n            ))}\r\n\r\n        </List>\r\n        \r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n        <MenuIcon />\r\n        </IconButton>\r\n\r\n        <SwipeableDrawer\r\n          open={this.state.open}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </SwipeableDrawer>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawerNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DrawerNav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TopNav from './TopNav';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DrawerNav from './DrawerNav';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  topMenu: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    visibility: 'hidden',\r\n  }\r\n});\r\n\r\nclass TopMenuBar extends React.Component {\r\n\r\n\r\n  handleClick = () => {\r\n    // set the addButton prop to handleClick function only if the prop was passed to TopMenuBar component\r\n    if (this.props.addButton) {\r\n      this.props.addButton();\r\n\r\n    };\r\n  };\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    // If the addButton prop exists, then set the ButtonExist to to have the show CSS class\r\n    // If it does not exist, set to hide\r\n\r\n    var ButtonExist = this.props.addButton ? \r\n    classes.show : classes.hide;\r\n\r\n\r\n  return (\r\n    <div className={classes.topMenu}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          \r\n          <DrawerNav />\r\n       \r\n          <Typography variant=\"h6\" color=\"inherit\" ml={100} className={classes.grow}>\r\n          {this.props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={this.handleClick} className={ButtonExist}><AddIcon /></IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nTopMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TopMenuBar);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport Typography from 'material-ui/styles/typography';\r\nimport { Paper } from 'material-ui';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"MainWindow\">\r\n        <TopMenuBar title=\"Foodi\" />\r\n        <Paper>\r\n          <p>Test Home Page paper</p>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { Button, TextField, ListItemText } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport { List, ListItem } from 'material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {spacing} from '@material-ui/system';\r\nimport { left } from '@material-ui/system/positions';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n  nameField: {\r\n    marginRight: theme.spacing.unit,\r\n    \r\n  },\r\n\r\n  nameFieldWrap: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    flexGrow: 1,\r\n    \r\n  },\r\n  \r\n  quantityField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 40,\r\n  },\r\n\r\n  typeField: {\r\n    marginLeft: theme.spacing.unit,\r\n    width: 60,\r\n    },\r\n\r\n  addButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  }\r\n  \r\n});\r\n\r\nclass AddItemForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {nameFieldValue: '',\r\n                    quantityFieldValue: '',\r\n                    typeFieldValue: '',\r\n                    nameFieldInputRef: '',\r\n                    };\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n      this.handleTextFieldChange = this.handleTextFieldChange.bind(this);\r\n      this.handleQuantityFieldChange = this.handleQuantityFieldChange.bind(this);\r\n      this.handleTypeFieldChange = this.handleTypeFieldChange.bind(this);\r\n\r\n    }\r\n\r\n  \r\n    handleTextFieldChange(event) {\r\n      this.setState({\r\n          nameFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    handleQuantityFieldChange(event) {\r\n      this.setState({\r\n          quantityFieldValue: event.target.value\r\n      });\r\n    }\r\n    \r\n    handleTypeFieldChange(event) {\r\n      this.setState({\r\n          typeFieldValue: event.target.value\r\n      });\r\n    }\r\n\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n      var newItemName = this.state.nameFieldValue;\r\n      var newQuantity = this.state.quantityFieldValue;\r\n      var newType = this.state.typeFieldValue;\r\n      \r\n      if(newItemName) {\r\n        var newItem = {};\r\n        newItem.name = newItemName;\r\n        newItem.quantity = newQuantity;\r\n        newItem.type = newType;\r\n        \r\n        this.props.addItem(this.props.listKey,newItem);\r\n        this.setState({\r\n        nameFieldValue: '',\r\n        quantityFieldValue: '',\r\n        typeFieldValue: ''\r\n        });\r\n\r\n        this.state.nameFieldInputRef.focus();\r\n        \r\n        \r\n      }\r\n    }\r\n    render () {\r\n      const {classes} = this.props;\r\n      \r\n      return (\r\n        \r\n        <Grid item>\r\n        <form onSubmit={this.onSubmit} autoComplete='off'>\r\n        <Grid container direction=\"row\" wrap=\"nowrap\">\r\n        \r\n        <Grid item className={classes.nameFieldWrap}>\r\n        <TextField className={classes.nameField}\r\n        id=\"itemName\"\r\n        ref=\"itemName\"\r\n        label=\"add item..\"\r\n        value={this.state.nameFieldValue} \r\n        onChange={this.handleTextFieldChange}\r\n        fullWidth\r\n        inputRef={el => this.setState({nameFieldInputRef: el})}\r\n        \r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <TextField className={classes.quantityField}\r\n        id=\"itemQuantity\"\r\n        ref=\"itemQuantity\"\r\n        label=\"qty\"\r\n        value={this.state.quantityFieldValue} \r\n        onChange={this.handleQuantityFieldChange}\r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n\r\n        <FormControl className={classes.typeField}>\r\n        <InputLabel htmlFor=\"type\">unit</InputLabel>\r\n          <Select\r\n            value={this.state.typeFieldValue}\r\n            onChange={this.handleTypeFieldChange}\r\n            \r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>none</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"gal\">gal</MenuItem>\r\n            <MenuItem value=\"lb\">lb</MenuItem>\r\n            <MenuItem value=\"box\">box</MenuItem>\r\n            <MenuItem value=\"L\">L</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n        \r\n        <IconButton className={classes.addButton} type=\"submit\" color=\"primary\" variant=\"contained\">\r\n        <i className=\"material-icons\">\r\n        add_shopping_cart\r\n        </i>\r\n        </IconButton>\r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n        </Grid>\r\n\r\n        \r\n        \r\n\r\n        \r\n      );   \r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(AddItemForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Grid } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  itemRow: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n\r\n  itemName: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n  },\r\n\r\n  noWrap: {\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  itemQuantity: {\r\n    width: 40,\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing.unit,\r\n    textAlign: 'right',    \r\n  },\r\n\r\n  itemType: {\r\n    width: 40,\r\n    padding: 0,\r\n    textAlign: 'left',\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n\r\n \r\n});\r\n\r\nclass ShoppingItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onClickDel = this.onClickDel.bind(this);\r\n      this.onClickDone = this.onClickDone.bind(this);\r\n    }\r\n    onClickDel() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.removeItem(listIndex,itemIndex);\r\n    }\r\n    onClickDone() {\r\n      var itemIndex = parseInt(this.props.index);\r\n      var listIndex = parseInt(this.props.listKey);\r\n      this.props.markItemDone(listIndex,itemIndex);\r\n    }\r\n    render () {\r\n      const { classes } = this.props;\r\n      var DoneClass = this.props.item.done ? \r\n          \"done\" : \"undone\";\r\n\r\n      let checkBoxIcon = this.props.item.done ?\r\n          <i className=\"material-icons\" >\r\n          check_box\r\n          </i> \r\n        : <i className=\"material-icons\" >\r\n          check_box_outline_blank\r\n          </i>\r\n     \r\n          \r\n      return(\r\n          <div className={DoneClass}>\r\n          <ListItem className={classes.itemRow}>\r\n          <Grid container direction=\"row\" alignItems=\"center\" wrap=\"nowrap\">\r\n          <Grid item className={classes.itemName}><Typography variant=\"subheading\" color=\"inherit\" className={classes.noWrap}>{this.props.item.name}</Typography></Grid>\r\n          <Grid item className={classes.itemQuantity}><Typography variant=\"subheading\" color=\"inherit\" className={classes.noWrap}>{this.props.item.quantity}</Typography></Grid>\r\n          <Grid item className={classes.itemType}><Typography variant=\"subheading\" color=\"inherit\" >{this.props.item.type}</Typography></Grid>\r\n          <Grid item><IconButton onClick={this.onClickDone} color=\"inherit\" >\r\n          \r\n          {checkBoxIcon}\r\n          </IconButton></Grid>\r\n\r\n          <Grid item><IconButton onClick={this.onClickDel} >\r\n          <i className=\"material-icons\" >\r\n          delete\r\n          </i>\r\n          </IconButton></Grid>\r\n          </Grid>\r\n          </ListItem>\r\n          </div>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default withStyles(styles)(ShoppingItem);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nclass ItemList extends React.Component {\r\n    render () {\r\n       \r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <ShoppingItem item={item} index={index} listKey={this.props.listKey} removeItem={this.props.removeItem} markItemDone={this.props.markItemDone} />\r\n          \r\n        );\r\n      });\r\n      return (\r\n        <Grid item>\r\n        <List >\r\n        {items}\r\n        </List>\r\n        </Grid>\r\n  \r\n  \r\n      );\r\n    }\r\n  }\r\n\r\n  export default ItemList;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass ListDelAlertDialog extends React.Component {\r\n\r\n  handleCancel = () => {\r\n    this.props.handleClose();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    this.props.handleConfirm();\r\n    this.props.handleClose();\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Dialog\r\n          open={this.props.open}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Confirm Delete\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n          This will delete the list.  Are you sure? </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleConfirm} color=\"secondary\" autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListDelAlertDialog;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ListDelAlertDialog from './ListDelAlertDialog';\r\nimport { List } from '@material-ui/core';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  ListMenu: {\r\n    display: 'flex',\r\n    \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass ListMenu extends React.Component {\r\n  state = {\r\n    open: false,\r\n    delAlertOpen: false,\r\n  };\r\n\r\n  handleToggle = () => {\r\n    this.setState(state => ({ open: !state.open }));\r\n  };\r\n\r\n  handleClose = event => {\r\n    if (this.anchorEl.contains(event.target)) {\r\n        return;\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleEditBtn = () => {\r\n    this.setState({ open: false });\r\n    this.props.listNameEdit(this.props.listKey);\r\n    }\r\n    \r\n\r\n  handleDelBtn = () => {\r\n    \r\n    this.setState({ open: false, delAlertOpen: true });\r\n    }\r\n  \r\n  handleDelAlertClose = () => {\r\n    this.setState({delAlertOpen: false})\r\n  }\r\n\r\n  handleDelConfirm = () => {\r\n    this.props.listDel(this.props.listKey);\r\n\r\n  }\r\n\r\n    \r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.ListMenu}>\r\n        <div>\r\n        <ListDelAlertDialog \r\n        open={this.state.delAlertOpen} \r\n        handleClose={this.handleDelAlertClose} \r\n        handleConfirm={this.handleDelConfirm} />\r\n        \r\n        <IconButton \r\n        className={classes.MenuButton} \r\n        color=\"inherit\" \r\n        aria-label=\"Menu\"\r\n        buttonRef={node => {\r\n            this.anchorEl = node;\r\n          }}\r\n          aria-owns={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleToggle} >\r\n           \r\n           <i className=\"material-icons\" >\r\n            more_vert\r\n            </i>\r\n                     \r\n                    \r\n        </IconButton>\r\n\r\n\r\n\r\n          <Popper open={open} anchorEl={this.anchorEl} transition >\r\n            {({ TransitionProps, placement }) => (\r\n              <Grow\r\n                {...TransitionProps}\r\n                id=\"menu-list-grow\"\r\n                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n              >\r\n                <Paper>\r\n                  <ClickAwayListener onClickAway={this.handleClose}>\r\n                    <MenuList>\r\n                      <MenuItem onClick={this.handleEditBtn} >Edit List Title</MenuItem>\r\n                      <MenuItem onClick={this.handleDelBtn} >Delete List</MenuItem>\r\n                      \r\n                    </MenuList>\r\n                  </ClickAwayListener>\r\n                </Paper>\r\n              </Grow>\r\n            )}\r\n          </Popper>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ListMenu);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './ShoppingList.css' \r\nimport { Paper } from 'material-ui';\r\nimport AddItemForm from './AddItemForm';\r\nimport ItemList from './ItemList';\r\nimport List from '@material-ui/core/List';\r\nimport { ListItem } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListMenu from './ListMenu';\r\nimport { AvMicNone } from 'material-ui/svg-icons';\r\nimport { Button, TextField, ListItemText } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nconst styles = theme => ({\r\n  ListGrid : {\r\n    width: '100%',\r\n    maxWidth: 400,\r\n    minWidth: 320,\r\n\r\n  },\r\n  FullWidth : {\r\n    width: '100%',\r\n  },\r\n\r\n  ListTitle: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n    marginLeft: theme.spacing.unit * 2,\r\n  },\r\n\r\n  MenuButton: {\r\n    marginRight: theme.spacing.unit * 2,\r\n  },\r\n\r\n  ShoppingList: {\r\n    \r\n    backgroundColor: theme.palette.background.paper,\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    \r\n  },\r\n\r\n});\r\n\r\n\r\n  \r\nclass ShoppingList extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      nameEdit: false,\r\n\r\n    };\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n\r\n  }\r\n\r\n  listNameEdit = (listKey) => {\r\n    this.setState({nameEdit: true});\r\n\r\n  }\r\n\r\n  listNameSave = (listKey) => {\r\n    this.setState({nameEdit: false});\r\n\r\n  }\r\n\r\n  handleNameChange = (event) =>  {\r\n    this.props.setListName(this.props.index, event.target.value);\r\n\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n \r\n      if (event.key === 'Enter') {\r\n        this.setState({nameEdit: false});\r\n       \r\n      }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    var ListNameHeadClass = this.state.nameEdit ? \r\n    \"hide nowrap\" : \"nohide nowrap\";\r\n\r\n    var ListNameFieldClass = this.state.nameEdit ?\r\n    \"nohide nowrap\" : \"hide nowrap\";\r\n\r\n      \r\n\r\n    return (\r\n      \r\n        <Grid  item className={classes.ListGrid}>\r\n        <Paper className={classes.ShoppingList}>\r\n        <Grid className={classes.FullWidth} container direction=\"column\" wrap=\"nowrap\" justify=\"flex-start\">\r\n          <Grid item >\r\n          <Grid container direction=\"row\" alignItems=\"center\"  wrap=\"nowrap\" className={classes.FullWidth}  >\r\n            <Grid item className={classes.ListTitle}>\r\n            <Typography variant=\"h6\" align=\"center\" className={ListNameHeadClass} onClick={this.listNameEdit}>{this.props.ListName}</Typography>\r\n            <div className={ListNameFieldClass} >\r\n              <ClickAwayListener onClickAway={this.listNameSave}>\r\n\r\n              <TextField  \r\n              id=\"listName\" \r\n              ref=\"listName\" \r\n              value={this.props.ListName}\r\n              onChange={this.handleNameChange}\r\n              onKeyPress={this.handleKeyPress}\r\n              fullWidth\r\n              inputProps={{\r\n                style: {  textAlign: \"center\",\r\n                          fontSize: \"1.25rem\",\r\n                          lineHeight: \"1.6\",\r\n                          letterSpacing: \"0.0075em\"}\r\n              }}\r\n              \r\n              \r\n              />\r\n              </ClickAwayListener>\r\n            </div> \r\n            </Grid>\r\n            <Grid item>\r\n            <ListMenu listDel={this.props.listDel} listKey={this.props.index} listName={this.props.ListName} listNameEdit={this.listNameEdit}/>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n          <ItemList listKey={this.props.index} items={this.props.ItemList} removeItem={this.props.itemDel} markItemDone={this.props.itemDone}/>\r\n          <AddItemForm listKey={this.props.index} addItem={this.props.itemAdd} />\r\n        </Grid>\r\n        </Paper>\r\n        </Grid>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ShoppingList);\r\n","import React, { Component } from 'react';\r\nimport ShoppingList from './ShoppingList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport './ShoppingHome.css';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport centerFocusStrong from 'material-ui/svg-icons/image/center-focus-strong';\r\n\r\nconst styles = theme => ({\r\n\r\n  instructionsGrid : {\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 2,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    width: '100%',\r\n    padding: '0',\r\n  },\r\n\r\n  notFound: {\r\n    flexGrow: 1,\r\n    minWidth: 0,\r\n    textAlign: 'center',\r\n  \r\n    \r\n  },\r\n\r\n  FullWidth : {\r\n    width: '100%',\r\n  },\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n});\r\n\r\n\r\nclass ShoppingHome extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n  }\r\n    \r\n    render() {\r\n      const { classes } = this.props;\r\n\r\n    if (this.props.listGroup.length == 0) {\r\n    var ShoppingListArray = <Grid container item justify=\"center\" wrap=\"nowrap\" direction=\"column\" className={classes.instructionsGrid}>\r\n    \r\n  \r\n    <Grid item className={classes.notFound}>\r\n    <Typography variant=\"h6\" color=\"inherit\">No Lists Found</Typography>\r\n    </Grid>\r\n    \r\n    </Grid>\r\n      \r\n    }\r\n    else {\r\n      var ShoppingListArray = this.props.listGroup.map((list, index) => {\r\n        return ( <ShoppingList \r\n          index={index} \r\n          ListName={list.ListName} \r\n          ItemList={list.ItemList} \r\n          listDel={this.props.listDel} \r\n          setListName={this.props.setListName}\r\n          itemAdd={this.props.itemAdd} \r\n          itemDel={this.props.itemDel} \r\n          itemDone={this.props.itemDone}\r\n  \r\n          />\r\n          );\r\n\r\n\r\n      });\r\n      \r\n    };\r\n      \r\n\r\n\r\n    \r\n\r\n    \r\n      return (\r\n        \r\n        \r\n        <div>\r\n        <TopMenuBar title=\"Foodi - Shopping Lists\" addButton={this.props.listAdd} />\r\n        <div className=\"MainWindow\">\r\n        <Grid container direction='row' justify='space-evenly' alignItems='flex-start' spacing={16}>\r\n\r\n        {ShoppingListArray}\r\n        \r\n        </Grid>\r\n        </div>\r\n        </div>\r\n        \r\n               \r\n        \r\n      );\r\n      \r\n    }\r\n\r\n\r\n  }\r\n  \r\n  export default withStyles(styles)(ShoppingHome);","import React, { Component } from 'react';\r\nimport TopMenuBar from '../TopMenuBar/TopMenuBar';\r\nimport Typography from 'material-ui/styles/typography';\r\nimport { Paper } from 'material-ui';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"MainWindow\">\r\n        <TopMenuBar title=\"Foodi - Settings\" />\r\n        <Paper>\r\n          <p>Test Settings Page paper</p>\r\n          <Button onClick={this.props.resetApp}>Reset App</Button>\r\n          <Button onClick={this.props.setSampleData}>Import Sample Data</Button>\r\n        </Paper>\r\n             \r\n        </div>\r\n                \r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Settings;","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider } from 'material-ui/styles';\r\nimport { getMuiTheme } from 'material-ui/styles';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './components/Home/Home';\r\nimport ShoppingHome from './components/Shopping/ShoppingHome';\r\nimport Settings from \"./components/Settings/Settings\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetching: false,\r\n      listGroup: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.hydrateStateWithLocalStorage();\r\n\r\n    // add event listener to save state to localStorage\r\n    // when user leaves/refreshes the page\r\n    window.addEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this)\r\n    );\r\n\r\n    // saves if component has a chance to unmount\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    // for every item in React state\r\n    for (let key in this.state) {\r\n      // save to localStorage\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n    }\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    // for all items in state\r\n    for (let key in this.state) {\r\n      // if the key exists in localStorage\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        // get the key's value from localStorage\r\n        let value = localStorage.getItem(key);\r\n\r\n        // parse the localStorage string and setState\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // handle empty string\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetApp = () => {\r\n    \r\n    this.setState({listGroup: []});\r\n    \r\n  }\r\n\r\n\r\n  // function to make new list in component state.  takes in ListName and ItemList array as arguments\r\n  addList = (ListName=\"New Shopping List\", ItemList=[]) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.push({ListName, ItemList});\r\n    this.setState({listGroup: listGroup});      \r\n    \r\n  }\r\n\r\n  // function to remove list.  takes in ListKey as argument. \r\n\r\n  removeList = (ListKey) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup.splice(ListKey, 1);\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  setListName = (ListKey, name) => {\r\n    var listGroup = this.state.listGroup;\r\n    listGroup[ListKey].ListName = name;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to remove item from specified list in state.  takes in ListKey and ItemKey as arguments\r\n  removeItem = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.splice(ItemKey, 1);\r\n    listGroup[ListKey].ItemList = List; \r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to add item from specified list in state.  takes in ListKey, ListItem as arguments\r\n  // ListItem has these props:  item.name, item.quantity, item.type, item.done\r\n\r\n  addItem = (ListKey, ListItem={quantity: \"\", type: \"\"}) => {\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    List.unshift({\r\n      name: ListItem.name,\r\n      quantity: ListItem.quantity,\r\n      type: ListItem.type,\r\n      done: false\r\n    });\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n  // function to mark an item as done.  takes in ListKey, ItemKey as arguments\r\n\r\n  markItemDone = (ListKey, ItemKey) => {\r\n\r\n    var listGroup = this.state.listGroup;\r\n    var List = this.state.listGroup[ListKey].ItemList;\r\n    var item = List[ItemKey];\r\n    item.done = !item.done;\r\n    List[ItemKey] = item;\r\n    listGroup[ListKey].ItemList = List;\r\n    this.setState({listGroup: listGroup});\r\n  }\r\n\r\n\r\n\r\n  setSampleData = () => {\r\n    \r\n    var ListName1 = \"Trader Joes\";\r\n    var ItemList1 = [];\r\n    ItemList1.push({name: \"milk\", quantity: 1, type: \"gal\", done: false});\r\n    ItemList1.push({name: \"cheese\", quantity: 2, type: \"cup\", done: true});\r\n    ItemList1.push({name: \"wheat bread\", quantity: 1, type: \"\", done: true});\r\n    \r\n  \r\n    var ListName2 = \"Shaws\";\r\n    var ItemList2 = [];\r\n    ItemList2.push({name: \"soda\", quantity: 2, type: \"L\", done: false});\r\n    ItemList2.push({name: \"sour worms\", quantity: 1, type: \"\", done: false});\r\n    ItemList2.push({name: \"ground beef\", quantity: 1, type: \"lb\", done: true});\r\n\r\n    this.addList(ListName1,ItemList1);\r\n    this.addList(ListName2,ItemList2);    \r\n    this.setState({isFetching: false});\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\r\n      <div className=\"App\">\r\n      <CssBaseline />\r\n      \r\n      <Switch>\r\n        <Route exact path='/' component={Home}/>\r\n        <Route path='/Shopping' \r\n        render={(props) => <ShoppingHome {...props} \r\n        listGroup={this.state.listGroup}\r\n        listDel={this.removeList} \r\n        listAdd={this.addList}\r\n        setListName={this.setListName}\r\n        itemAdd={this.addItem} \r\n        itemDel={this.removeItem} \r\n        itemDone={this.markItemDone}\r\n        />}\r\n        />\r\n        <Route path='/Settings' \r\n        render={(props) => <Settings {...props} \r\n        resetApp={this.resetApp}\r\n        setSampleData={this.setSampleData}\r\n        />}\r\n        />\r\n        <Route component={() => (<div>404 Not found </div>)}/>\r\n        </Switch>\r\n      </div>\r\n      </MuiThemeProvider>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n    ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}